
[
  [
    expr: [Red he: [] a: 'test
    range: [1 1 77 1]
    nested: 
    [
      [
        expr: Red
        range: [1 1 1 4]
        upper: [1 1 77 1]
        syntax: [
          word: Red
        ]
      ]
      [
        expr: he:
        range: [1 5 1 8]
        upper: [1 1 77 1]
        syntax: [
          step: 2
          value: [1 9 1 11]
        ]
        error: [severity 1 code "miss-expr" source "Syntax" message "he: -- need a type: block! for Red File header"]
      ]
      [
        expr: []
        range: [1 9 1 11]
        upper: [1 1 77 1]
      ]
      [
        expr: a:
        range: [3 1 3 3]
        upper: [1 1 77 1]
        syntax: [
          step: 2
          value: [3 4 3 9]
        ]
      ]
      [
        expr: 'test
        range: [3 4 3 9]
        upper: [1 1 77 1]
      ]
      [
        expr: b:
        range: [4 1 4 3]
        upper: [1 1 77 1]
        syntax: [
          step: 2
          cast: [4 4 4 11]
        ]
      ]
      [
        expr: context
        range: [4 4 4 11]
        upper: [1 1 77 1]
        syntax: [
          word: context
          step: 2
          resolved: [
            spec: [4 12 33 2]
          ]
        ]
      ]
      [
        expr: [a: a c: 4 d: contex
        range: [4 12 33 2]
        upper: [1 1 77 1]
        nested: 
        [
          [
            expr: a:
            range: [5 2 5 4]
            upper: [4 12 33 2]
            syntax: [
              step: 2
              cast: [5 5 5 6]
              recent: [3 1 3 3]
            ]
          ]
          [
            expr: a
            range: [5 5 5 6]
            upper: [4 12 33 2]
            syntax: [
              word: a
              recent: [5 2 5 4]
            ]
          ]
          [
            expr: c:
            range: [6 2 6 4]
            upper: [4 12 33 2]
            syntax: [
              step: 2
              value: [6 5 6 6]
            ]
          ]
          [
            expr: 4
            range: [6 5 6 6]
            upper: [4 12 33 2]
          ]
          [
            expr: d:
            range: [7 2 7 4]
            upper: [4 12 33 2]
            syntax: [
              step: 2
              cast: [7 5 7 12]
            ]
          ]
          [
            expr: context
            range: [7 5 7 12]
            upper: [4 12 33 2]
            syntax: [
              word: context
              step: 2
              resolved: [
                spec: [7 13 28 3]
              ]
            ]
          ]
          [
            expr: [e: #{12} f: func [x
            range: [7 13 28 3]
            upper: [4 12 33 2]
            nested: 
            [
              [
                expr: e:
                range: [8 3 8 5]
                upper: [7 13 28 3]
                syntax: [
                  step: 2
                  value: [8 6 8 11]
                ]
              ]
              [
                expr: #{12}
                range: [8 6 8 11]
                upper: [7 13 28 3]
              ]
              [
                expr: f:
                range: [9 3 9 5]
                upper: [7 13 28 3]
                syntax: [
                  step: 2
                  cast: [9 6 9 10]
                ]
              ]
              [
                expr: func
                range: [9 6 9 10]
                upper: [7 13 28 3]
                syntax: [
                  word: func
                  step: 3
                  resolved: [
                    spec: [9 11 9 36]
                    body: [9 36 26 4]
                  ]
                ]
              ]
              [
                expr: [x [block!] y [integ
                range: [9 11 9 36]
                upper: [7 13 28 3]
                nested: 
                [
                  [
                    expr: x
                    range: [9 12 9 13]
                    upper: [9 11 9 36]
                    syntax: [
                      type: func-param
                      args: [
                        type: [9 14 9 22]
                      ]
                    ]
                  ]
                  [
                    expr: [block!]
                    range: [9 14 9 22]
                    upper: [9 11 9 36]
                    nested: 
                    [
                      [
                        expr: block!
                        range: [9 15 9 21]
                        upper: [9 14 9 22]
                        syntax: [
                          type: func-type-item
                        ]
                      ]
                    ]
                    syntax: [
                      type: func-type
                      parent: [9 12 9 13]
                    ]
                  ]
                  [
                    expr: y
                    range: [9 23 9 24]
                    upper: [9 11 9 36]
                    syntax: [
                      type: func-param
                      args: [
                        type: [9 25 9 35]
                      ]
                    ]
                  ]
                  [
                    expr: [integer!]
                    range: [9 25 9 35]
                    upper: [9 11 9 36]
                    nested: 
                    [
                      [
                        expr: integer!
                        range: [9 26 9 34]
                        upper: [9 25 9 35]
                        syntax: [
                          type: func-type-item
                        ]
                      ]
                    ]
                    syntax: [
                      type: func-type
                      parent: [9 23 9 24]
                    ]
                  ]
                ]
                syntax: [
                  type: spec
                  parent: [9 6 9 10]
                ]
              ]
              [
                expr: [ff: function [a [in
                range: [9 36 26 4]
                upper: [7 13 28 3]
                nested: 
                [
                  [
                    expr: ff:
                    range: [10 4 10 7]
                    upper: [9 36 26 4]
                    syntax: [
                      step: 2
                      cast: [10 8 10 16]
                    ]
                  ]
                  [
                    expr: function
                    range: [10 8 10 16]
                    upper: [9 36 26 4]
                    syntax: [
                      word: function
                      step: 3
                      resolved: [
                        spec: [10 17 10 43]
                        body: [10 43 19 5]
                      ]
                    ]
                  ]
                  [
                    expr: [a [integer!] b [bin
                    range: [10 17 10 43]
                    upper: [9 36 26 4]
                    nested: 
                    [
                      [
                        expr: a
                        range: [10 18 10 19]
                        upper: [10 17 10 43]
                        syntax: [
                          type: func-param
                          args: [
                            type: [10 20 10 30]
                          ]
                        ]
                      ]
                      [
                        expr: [integer!]
                        range: [10 20 10 30]
                        upper: [10 17 10 43]
                        nested: 
                        [
                          [
                            expr: integer!
                            range: [10 21 10 29]
                            upper: [10 20 10 30]
                            syntax: [
                              type: func-type-item
                            ]
                          ]
                        ]
                        syntax: [
                          type: func-type
                          parent: [10 18 10 19]
                        ]
                      ]
                      [
                        expr: b
                        range: [10 31 10 32]
                        upper: [10 17 10 43]
                        syntax: [
                          type: func-param
                          args: [
                            type: [10 33 10 42]
                          ]
                        ]
                      ]
                      [
                        expr: [binary!]
                        range: [10 33 10 42]
                        upper: [10 17 10 43]
                        nested: 
                        [
                          [
                            expr: binary!
                            range: [10 34 10 41]
                            upper: [10 33 10 42]
                            syntax: [
                              type: func-type-item
                            ]
                          ]
                        ]
                        syntax: [
                          type: func-type
                          parent: [10 31 10 32]
                        ]
                      ]
                    ]
                    syntax: [
                      type: spec
                      parent: [10 8 10 16]
                    ]
                  ]
                  [
                    expr: [f1: "test" f2: x f3
                    range: [10 43 19 5]
                    upper: [9 36 26 4]
                    nested: 
                    [
                      [
                        expr: f1:
                        range: [11 5 11 8]
                        upper: [10 43 19 5]
                        syntax: [
                          step: 2
                          value: [11 9 11 15]
                          declare: [10 17 10 43]
                        ]
                      ]
                      [
                        expr: "test"
                        range: [11 9 11 15]
                        upper: [10 43 19 5]
                      ]
                      [
                        expr: f2:
                        range: [12 5 12 8]
                        upper: [10 43 19 5]
                        syntax: [
                          step: 2
                          cast: [12 9 12 10]
                          declare: [10 17 10 43]
                        ]
                      ]
                      [
                        expr: x
                        range: [12 9 12 10]
                        upper: [10 43 19 5]
                        syntax: [
                          word: x
                          recent: [20 4 20 6]
                          declare: [9 12 9 13]
                        ]
                      ]
                      [
                        expr: f3:
                        range: [13 5 13 8]
                        upper: [10 43 19 5]
                        syntax: [
                          step: 2
                          cast: [13 9 13 11]
                          declare: [10 17 10 43]
                        ]
                      ]
                      [
                        expr: f1
                        range: [13 9 13 11]
                        upper: [10 43 19 5]
                        syntax: [
                          word: f1
                          recent: [11 5 11 8]
                        ]
                      ]
                      [
                        expr: f4:
                        range: [14 5 14 8]
                        upper: [10 43 19 5]
                        syntax: [
                          step: 2
                          cast: [14 9 14 10]
                          declare: [10 17 10 43]
                        ]
                      ]
                      [
                        expr: l
                        range: [14 9 14 10]
                        upper: [10 43 19 5]
                        syntax: [
                          word: l
                          recent: [35 1 35 3]
                        ]
                      ]
                      [
                        expr: f5:
                        range: [15 5 15 8]
                        upper: [10 43 19 5]
                        syntax: [
                          declare: [10 17 10 43]
                        ]
                      ]
                      [
                        expr: :f
                        range: [15 9 15 11]
                        upper: [10 43 19 5]
                        syntax: [
                          word: f
                          recent: [9 3 9 5]
                        ]
                      ]
                      [
                        expr: f6:
                        range: [16 5 16 8]
                        upper: [10 43 19 5]
                        syntax: [
                          step: 2
                          cast: [16 9 16 11]
                          declare: [10 17 10 43]
                        ]
                      ]
                      [
                        expr: f5
                        range: [16 9 16 11]
                        upper: [10 43 19 5]
                        syntax: [
                          word: f5
                          recent: [15 5 15 8]
                        ]
                      ]
                      [
                        expr: f7:
                        range: [17 5 17 8]
                        upper: [10 43 19 5]
                        syntax: [
                          step: 2
                          cast: [17 9 17 10]
                          declare: [10 17 10 43]
                        ]
                      ]
                      [
                        expr: a
                        range: [17 9 17 10]
                        upper: [10 43 19 5]
                        syntax: [
                          word: a
                          recent: [5 2 5 4]
                          declare: [10 18 10 19]
                        ]
                      ]
                      [
                        expr: +
                        range: [17 11 17 12]
                        upper: [10 43 19 5]
                        syntax: [
                          word: +
                        ]
                      ]
                      [
                        expr: length?
                        range: [17 13 17 20]
                        upper: [10 43 19 5]
                        syntax: [
                          word: length?
                        ]
                      ]
                      [
                        expr: b
                        range: [17 21 17 22]
                        upper: [10 43 19 5]
                        syntax: [
                          word: b
                          recent: [4 1 4 3]
                          declare: [10 31 10 32]
                        ]
                      ]
                      [
                        expr: f
                        range: [18 5 18 6]
                        upper: [10 43 19 5]
                        syntax: [
                          word: f
                          recent: [9 3 9 5]
                        ]
                      ]
                    ]
                    syntax: [
                      type: body
                      parent: [10 8 10 16]
                    ]
                  ]
                  [
                    expr: x:
                    range: [20 4 20 6]
                    upper: [9 36 26 4]
                    syntax: [
                      step: 2
                      value: [20 7 20 8]
                      declare: [9 12 9 13]
                    ]
                  ]
                  [
                    expr: 1
                    range: [20 7 20 8]
                    upper: [9 36 26 4]
                  ]
                  [
                    expr: y:
                    range: [21 4 21 6]
                    upper: [9 36 26 4]
                    syntax: [
                      step: 2
                      value: [21 7 21 8]
                      declare: [9 23 9 24]
                    ]
                  ]
                  [
                    expr: 1
                    range: [21 7 21 8]
                    upper: [9 36 26 4]
                  ]
                  [
                    expr: e:
                    range: [22 4 22 6]
                    upper: [9 36 26 4]
                    syntax: [
                      step: 2
                      cast: [22 7 22 8]
                      recent: [8 3 8 5]
                    ]
                  ]
                  [
                    expr: x
                    range: [22 7 22 8]
                    upper: [9 36 26 4]
                    syntax: [
                      word: x
                      recent: [20 4 20 6]
                      declare: [9 12 9 13]
                    ]
                  ]
                  [
                    expr: +
                    range: [22 9 22 10]
                    upper: [9 36 26 4]
                    syntax: [
                      word: +
                    ]
                  ]
                  [
                    expr: y
                    range: [22 11 22 12]
                    upper: [9 36 26 4]
                    syntax: [
                      word: y
                      recent: [21 4 21 6]
                      declare: [9 23 9 24]
                    ]
                  ]
                  [
                    expr: o:
                    range: [23 4 23 6]
                    upper: [9 36 26 4]
                    syntax: [
                      step: 2
                      cast: [23 7 23 8]
                      recent: [36 1 36 3]
                    ]
                  ]
                  [
                    expr: g
                    range: [23 7 23 8]
                    upper: [9 36 26 4]
                    syntax: [
                      word: g
                      recent: [27 3 27 5]
                    ]
                  ]
                  [
                    expr: t:
                    range: [24 4 24 6]
                    upper: [9 36 26 4]
                    syntax: [
                      step: 2
                      cast: [24 7 24 8]
                    ]
                  ]
                  [
                    expr: h
                    range: [24 7 24 8]
                    upper: [9 36 26 4]
                    syntax: [
                      word: h
                      recent: [29 2 29 4]
                    ]
                  ]
                  [
                    expr: u:
                    range: [25 4 25 6]
                    upper: [9 36 26 4]
                    syntax: [
                      step: 2
                      cast: [25 7 25 8]
                    ]
                  ]
                  [
                    expr: x
                    range: [25 7 25 8]
                    upper: [9 36 26 4]
                    syntax: [
                      word: x
                      recent: [20 4 20 6]
                      declare: [9 12 9 13]
                    ]
                  ]
                ]
                syntax: [
                  type: body
                  parent: [9 6 9 10]
                ]
              ]
              [
                expr: g:
                range: [27 3 27 5]
                upper: [7 13 28 3]
                syntax: [
                  step: 2
                  value: [27 6 27 8]
                ]
              ]
              [
                expr: []
                range: [27 6 27 8]
                upper: [7 13 28 3]
              ]
            ]
            syntax: [
              type: spec
              parent: [7 5 7 12]
            ]
          ]
          [
            expr: h:
            range: [29 2 29 4]
            upper: [4 12 33 2]
            syntax: [
              step: 2
              value: [29 5 29 12]
            ]
          ]
          [
            expr: #(a: 3)
            range: [29 5 29 12]
            upper: [4 12 33 2]
            nested: 
            [
              [
                expr: a:
                range: [29 7 29 9]
                upper: [29 5 29 12]
              ]
              [
                expr: 3
                range: [29 10 29 11]
                upper: [29 5 29 12]
              ]
            ]
          ]
          [
            expr: i:
            range: [30 2 30 4]
            upper: [4 12 33 2]
            syntax: [
              step: 2
              cast: [30 5 30 6]
            ]
          ]
          [
            expr: x
            range: [30 5 30 6]
            upper: [4 12 33 2]
            syntax: [
              word: x
            ]
          ]
          [
            expr: j:
            range: [31 2 31 4]
            upper: [4 12 33 2]
            syntax: [
              step: 2
              cast: [31 5 31 6]
            ]
          ]
          [
            expr: e
            range: [31 5 31 6]
            upper: [4 12 33 2]
            syntax: [
              word: e
            ]
          ]
          [
            expr: k:
            range: [32 2 32 4]
            upper: [4 12 33 2]
            syntax: [
              step: 2
              cast: [32 5 32 6]
            ]
          ]
          [
            expr: t
            range: [32 5 32 6]
            upper: [4 12 33 2]
            syntax: [
              word: t
            ]
          ]
        ]
        syntax: [
          type: spec
          parent: [4 4 4 11]
        ]
      ]
      [
        expr: l:
        range: [35 1 35 3]
        upper: [1 1 77 1]
        syntax: [
          step: 2
          value: [35 4 35 15]
        ]
      ]
      [
        expr: (m: 3 n: a)
        range: [35 4 35 15]
        upper: [1 1 77 1]
        nested: 
        [
          [
            expr: m:
            range: [35 5 35 7]
            upper: [35 4 35 15]
            syntax: [
              step: 2
              value: [35 8 35 9]
            ]
          ]
          [
            expr: 3
            range: [35 8 35 9]
            upper: [35 4 35 15]
          ]
          [
            expr: n:
            range: [35 10 35 12]
            upper: [35 4 35 15]
            syntax: [
              step: 2
              cast: [35 13 35 14]
            ]
          ]
          [
            expr: a
            range: [35 13 35 14]
            upper: [35 4 35 15]
            syntax: [
              word: a
              recent: [3 1 3 3]
            ]
          ]
        ]
      ]
      [
        expr: o:
        range: [36 1 36 3]
        upper: [1 1 77 1]
        syntax: [
          step: 2
          cast: [36 4 36 5]
        ]
      ]
      [
        expr: l
        range: [36 4 36 5]
        upper: [1 1 77 1]
        syntax: [
          word: l
          recent: [35 1 35 3]
        ]
      ]
      [
        expr: r:
        range: [38 1 38 3]
        upper: [1 1 77 1]
        syntax: [
          step: 2
          cast: [38 4 38 8]
        ]
      ]
      [
        expr: func
        range: [38 4 38 8]
        upper: [1 1 77 1]
        syntax: [
          word: func
          step: 3
          resolved: [
            spec: [38 9 44 2]
            body: [44 2 47 2]
          ]
        ]
      ]
      [
        expr: [a [test] b [test!] 
        range: [38 9 44 2]
        upper: [1 1 77 1]
        nested: 
        [
          [
            expr: a
            range: [39 2 39 3]
            upper: [38 9 44 2]
            syntax: [
              type: func-param
              args: [
                type: [39 4 39 10]
              ]
            ]
          ]
          [
            expr: [test]
            range: [39 4 39 10]
            upper: [38 9 44 2]
            nested: 
            [
              [
                expr: test
                range: [39 5 39 9]
                upper: [39 4 39 10]
                syntax: [
                  type: func-type-item
                ]
                error: [severity 1 code "invalid-datatype" source "Syntax" message "test -- invalid datatype: test"]
              ]
            ]
            syntax: [
              type: func-type
              parent: [39 2 39 3]
            ]
          ]
          [
            expr: b
            range: [40 2 40 3]
            upper: [38 9 44 2]
            syntax: [
              type: func-param
              args: [
                type: [40 4 40 11]
              ]
            ]
          ]
          [
            expr: [test!]
            range: [40 4 40 11]
            upper: [38 9 44 2]
            nested: 
            [
              [
                expr: test!
                range: [40 5 40 10]
                upper: [40 4 40 11]
                syntax: [
                  type: func-type-item
                ]
                error: [severity 1 code "invalid-datatype" source "Syntax" message "test! -- invalid datatype: test!"]
              ]
            ]
            syntax: [
              type: func-type
              parent: [40 2 40 3]
            ]
          ]
          [
            expr: /part
            range: [41 2 41 7]
            upper: [38 9 44 2]
            syntax: [
              type: func-refinement
              args: [
                params: [
                  [41 8 41 14]
                ]
              ]
            ]
          ]
          [
            expr: length
            range: [41 8 41 14]
            upper: [38 9 44 2]
            syntax: [
              type: func-param
              args: [
                refs: [41 2 41 7]
                type: [41 15 41 33]
              ]
            ]
          ]
          [
            expr: [integer! string!]
            range: [41 15 41 33]
            upper: [38 9 44 2]
            nested: 
            [
              [
                expr: integer!
                range: [41 16 41 24]
                upper: [41 15 41 33]
                syntax: [
                  type: func-type-item
                ]
              ]
              [
                expr: string!
                range: [41 25 41 32]
                upper: [41 15 41 33]
                syntax: [
                  type: func-type-item
                ]
              ]
            ]
            syntax: [
              type: func-type
              parent: [41 8 41 14]
            ]
          ]
          [
            expr: return:
            range: [42 2 42 9]
            upper: [38 9 44 2]
            syntax: [
              type: func-return
              args: [
                type: [42 10 42 18]
              ]
            ]
          ]
          [
            expr: [block!]
            range: [42 10 42 18]
            upper: [38 9 44 2]
            nested: 
            [
              [
                expr: block!
                range: [42 11 42 17]
                upper: [42 10 42 18]
                syntax: [
                  type: func-type-item
                ]
              ]
            ]
            syntax: [
              type: func-type
              parent: [42 2 42 9]
            ]
          ]
          [
            expr: /local
            range: [43 2 43 8]
            upper: [38 9 44 2]
            syntax: [
              type: func-refinement
              args: [
                params: [
                  [43 9 43 10]
                  [43 11 43 12]
                ]
              ]
            ]
          ]
          [
            expr: x
            range: [43 9 43 10]
            upper: [38 9 44 2]
            syntax: [
              type: func-param
              args: [
                refs: [43 2 43 8]
              ]
            ]
          ]
          [
            expr: y
            range: [43 11 43 12]
            upper: [38 9 44 2]
            syntax: [
              type: func-param
              args: [
                refs: [43 2 43 8]
              ]
            ]
          ]
        ]
        syntax: [
          type: spec
          parent: [38 4 38 8]
        ]
      ]
      [
        expr: [x: 1 y: 1 a + b + 1
        range: [44 2 47 2]
        upper: [1 1 77 1]
        nested: 
        [
          [
            expr: x:
            range: [45 2 45 4]
            upper: [44 2 47 2]
            syntax: [
              step: 2
              value: [45 5 45 6]
              declare: [43 9 43 10]
            ]
          ]
          [
            expr: 1
            range: [45 5 45 6]
            upper: [44 2 47 2]
          ]
          [
            expr: y:
            range: [45 7 45 9]
            upper: [44 2 47 2]
            syntax: [
              step: 2
              value: [45 10 45 11]
              declare: [43 11 43 12]
            ]
          ]
          [
            expr: 1
            range: [45 10 45 11]
            upper: [44 2 47 2]
          ]
          [
            expr: a
            range: [46 2 46 3]
            upper: [44 2 47 2]
            syntax: [
              word: a
              recent: [3 1 3 3]
              declare: [39 2 39 3]
            ]
          ]
          [
            expr: +
            range: [46 4 46 5]
            upper: [44 2 47 2]
            syntax: [
              word: +
            ]
          ]
          [
            expr: b
            range: [46 6 46 7]
            upper: [44 2 47 2]
            syntax: [
              word: b
              recent: [4 1 4 3]
              declare: [40 2 40 3]
            ]
          ]
          [
            expr: +
            range: [46 8 46 9]
            upper: [44 2 47 2]
            syntax: [
              word: +
            ]
          ]
          [
            expr: 1
            range: [46 10 46 11]
            upper: [44 2 47 2]
          ]
          [
            expr: +
            range: [46 12 46 13]
            upper: [44 2 47 2]
            syntax: [
              word: +
            ]
          ]
          [
            expr: 1
            range: [46 14 46 15]
            upper: [44 2 47 2]
          ]
        ]
        syntax: [
          type: body
          parent: [38 4 38 8]
        ]
      ]
      [
        expr: s:
        range: [49 1 49 3]
        upper: [1 1 77 1]
        syntax: [
          step: 2
          cast: [49 4 49 12]
        ]
      ]
      [
        expr: function
        range: [49 4 49 12]
        upper: [1 1 77 1]
        syntax: [
          word: function
          step: 3
          resolved: [
            spec: [49 13 49 56]
            body: [49 56 55 2]
          ]
        ]
      ]
      [
        expr: [uri [string!] code 
        range: [49 13 49 56]
        upper: [1 1 77 1]
        nested: 
        [
          [
            expr: uri
            range: [49 14 49 17]
            upper: [49 13 49 56]
            syntax: [
              type: func-param
              args: [
                type: [49 18 49 27]
              ]
            ]
          ]
          [
            expr: [string!]
            range: [49 18 49 27]
            upper: [49 13 49 56]
            nested: 
            [
              [
                expr: string!
                range: [49 19 49 26]
                upper: [49 18 49 27]
                syntax: [
                  type: func-type-item
                ]
              ]
            ]
            syntax: [
              type: func-type
              parent: [49 14 49 17]
            ]
          ]
          [
            expr: code
            range: [49 28 49 32]
            upper: [49 13 49 56]
            syntax: [
              type: func-param
              args: [
                type: [49 33 49 42]
              ]
            ]
          ]
          [
            expr: [string!]
            range: [49 33 49 42]
            upper: [49 13 49 56]
            nested: 
            [
              [
                expr: string!
                range: [49 34 49 41]
                upper: [49 33 49 42]
                syntax: [
                  type: func-type-item
                ]
              ]
            ]
            syntax: [
              type: func-type
              parent: [49 28 49 32]
            ]
          ]
          [
            expr: blk
            range: [49 43 49 46]
            upper: [49 13 49 56]
            syntax: [
              type: func-param
              args: [
                type: [49 47 49 55]
              ]
            ]
          ]
          [
            expr: [block!]
            range: [49 47 49 55]
            upper: [49 13 49 56]
            nested: 
            [
              [
                expr: block!
                range: [49 48 49 54]
                upper: [49 47 49 55]
                syntax: [
                  type: func-type-item
                ]
              ]
            ]
            syntax: [
              type: func-type
              parent: [49 43 49 46]
            ]
          ]
        ]
        syntax: [
          type: spec
          parent: [49 4 49 12]
        ]
      ]
      [
        expr: [either uri [return 
        range: [49 56 55 2]
        upper: [1 1 77 1]
        nested: 
        [
          [
            expr: either
            range: [50 2 50 8]
            upper: [49 56 55 2]
            syntax: [
              word: either
            ]
          ]
          [
            expr: uri
            range: [50 9 50 12]
            upper: [49 56 55 2]
            syntax: [
              word: uri
              declare: [49 14 49 17]
            ]
          ]
          [
            expr: [return reduce [uri 
            range: [50 13 52 3]
            upper: [49 56 55 2]
            nested: 
            [
              [
                expr: return
                range: [51 3 51 9]
                upper: [50 13 52 3]
              ]
              [
                expr: reduce
                range: [51 10 51 16]
                upper: [50 13 52 3]
              ]
              [
                expr: [uri code blk]
                range: [51 17 51 31]
                upper: [50 13 52 3]
                nested: 
                [
                  [
                    expr: uri
                    range: [51 18 51 21]
                    upper: [51 17 51 31]
                  ]
                  [
                    expr: code
                    range: [51 22 51 26]
                    upper: [51 17 51 31]
                  ]
                  [
                    expr: blk
                    range: [51 27 51 30]
                    upper: [51 17 51 31]
                  ]
                ]
              ]
            ]
          ]
          [
            expr: [return reduce [uri 
            range: [52 3 54 3]
            upper: [49 56 55 2]
            nested: 
            [
              [
                expr: return
                range: [53 3 53 9]
                upper: [52 3 54 3]
              ]
              [
                expr: reduce
                range: [53 10 53 16]
                upper: [52 3 54 3]
              ]
              [
                expr: [uri code blk]
                range: [53 17 53 31]
                upper: [52 3 54 3]
                nested: 
                [
                  [
                    expr: uri
                    range: [53 18 53 21]
                    upper: [53 17 53 31]
                  ]
                  [
                    expr: code
                    range: [53 22 53 26]
                    upper: [53 17 53 31]
                  ]
                  [
                    expr: blk
                    range: [53 27 53 30]
                    upper: [53 17 53 31]
                  ]
                ]
              ]
            ]
          ]
        ]
        syntax: [
          type: body
          parent: [49 4 49 12]
        ]
      ]
      [
        expr: fff:
        range: [57 1 57 5]
        upper: [1 1 77 1]
        syntax: [
          step: 2
          value: [57 6 57 7]
        ]
      ]
      [
        expr: 3
        range: [57 6 57 7]
        upper: [1 1 77 1]
      ]
      [
        expr: ft:
        range: [59 1 59 4]
        upper: [1 1 77 1]
        syntax: [
          step: 2
          cast: [59 5 59 9]
        ]
      ]
      [
        expr: func
        range: [59 5 59 9]
        upper: [1 1 77 1]
        syntax: [
          word: func
          step: 3
          resolved: [
            spec: [59 10 59 104]
            body: [59 104 62 2]
          ]
        ]
      ]
      [
        expr: [a [block!] b [map! 
        range: [59 10 59 104]
        upper: [1 1 77 1]
        nested: 
        [
          [
            expr: a
            range: [59 11 59 12]
            upper: [59 10 59 104]
            syntax: [
              type: func-param
              args: [
                type: [59 13 59 21]
              ]
            ]
          ]
          [
            expr: [block!]
            range: [59 13 59 21]
            upper: [59 10 59 104]
            nested: 
            [
              [
                expr: block!
                range: [59 14 59 20]
                upper: [59 13 59 21]
                syntax: [
                  type: func-type-item
                ]
              ]
            ]
            syntax: [
              type: func-type
              parent: [59 11 59 12]
            ]
          ]
          [
            expr: b
            range: [59 22 59 23]
            upper: [59 10 59 104]
            syntax: [
              type: func-param
              args: [
                type: [59 24 59 39]
              ]
            ]
          ]
          [
            expr: [map! integer!]
            range: [59 24 59 39]
            upper: [59 10 59 104]
            nested: 
            [
              [
                expr: map!
                range: [59 25 59 29]
                upper: [59 24 59 39]
                syntax: [
                  type: func-type-item
                ]
              ]
              [
                expr: integer!
                range: [59 30 59 38]
                upper: [59 24 59 39]
                syntax: [
                  type: func-type-item
                ]
              ]
            ]
            syntax: [
              type: func-type
              parent: [59 22 59 23]
            ]
          ]
          [
            expr: return:
            range: [59 40 59 47]
            upper: [59 10 59 104]
            syntax: [
              type: func-return
              args: [
                type: [59 48 59 58]
              ]
            ]
            error: [severity 1 code "invalid-arg" source "Syntax" message "return: -- invalid argument for: c"]
          ]
          [
            expr: [integer!]
            range: [59 48 59 58]
            upper: [59 10 59 104]
            nested: 
            [
              [
                expr: integer!
                range: [59 49 59 57]
                upper: [59 48 59 58]
                syntax: [
                  type: func-type-item
                ]
              ]
            ]
            syntax: [
              type: func-type
              parent: [59 40 59 47]
            ]
          ]
          [
            expr: c
            range: [59 59 59 60]
            upper: [59 10 59 104]
            syntax: [
              type: func-param
              args: [
                type: [59 61 59 71]
              ]
            ]
          ]
          [
            expr: [integer!]
            range: [59 61 59 71]
            upper: [59 10 59 104]
            nested: 
            [
              [
                expr: integer!
                range: [59 62 59 70]
                upper: [59 61 59 71]
                syntax: [
                  type: func-type-item
                ]
              ]
            ]
            syntax: [
              type: func-type
              parent: [59 59 59 60]
            ]
          ]
          [
            expr: /c
            range: [59 72 59 74]
            upper: [59 10 59 104]
            syntax: [
              type: func-refinement
              args: [
                params: [
                  [59 75 59 76]
                ]
              ]
            ]
            error: [severity 1 code "double-define" source "Syntax" message "/c -- double define: c"]
          ]
          [
            expr: a
            range: [59 75 59 76]
            upper: [59 10 59 104]
            syntax: [
              type: func-param
              args: [
                refs: [59 72 59 74]
                type: [59 77 59 87]
              ]
            ]
            error: [severity 1 code "double-define" source "Syntax" message "a -- double define: a"]
          ]
          [
            expr: [integer!]
            range: [59 77 59 87]
            upper: [59 10 59 104]
            nested: 
            [
              [
                expr: integer!
                range: [59 78 59 86]
                upper: [59 77 59 87]
                syntax: [
                  type: func-type-item
                ]
              ]
            ]
            syntax: [
              type: func-type
              parent: [59 75 59 76]
            ]
          ]
          [
            expr: /d
            range: [59 88 59 90]
            upper: [59 10 59 104]
            syntax: [
              type: func-refinement
              args: [
                params: [
                ]
              ]
            ]
          ]
          [
            expr: /local
            range: [59 91 59 97]
            upper: [59 10 59 104]
            syntax: [
              type: func-refinement
              args: [
                params: [
                  [59 98 59 99]
                  [59 100 59 101]
                  [59 102 59 103]
                ]
              ]
            ]
          ]
          [
            expr: x
            range: [59 98 59 99]
            upper: [59 10 59 104]
            syntax: [
              type: func-param
              args: [
                refs: [59 91 59 97]
              ]
            ]
          ]
          [
            expr: y
            range: [59 100 59 101]
            upper: [59 10 59 104]
            syntax: [
              type: func-param
              args: [
                refs: [59 91 59 97]
              ]
            ]
          ]
          [
            expr: z
            range: [59 102 59 103]
            upper: [59 10 59 104]
            syntax: [
              type: func-param
              args: [
                refs: [59 91 59 97]
              ]
            ]
          ]
        ]
        syntax: [
          type: spec
          parent: [59 5 59 9]
        ]
      ]
      [
        expr: [reduce [a b c d] fi
        range: [59 104 62 2]
        upper: [1 1 77 1]
        nested: 
        [
          [
            expr: reduce
            range: [60 2 60 8]
            upper: [59 104 62 2]
            syntax: [
              word: reduce
            ]
          ]
          [
            expr: [a b c d]
            range: [60 9 60 18]
            upper: [59 104 62 2]
            nested: 
            [
              [
                expr: a
                range: [60 10 60 11]
                upper: [60 9 60 18]
              ]
              [
                expr: b
                range: [60 12 60 13]
                upper: [60 9 60 18]
              ]
              [
                expr: c
                range: [60 14 60 15]
                upper: [60 9 60 18]
              ]
              [
                expr: d
                range: [60 16 60 17]
                upper: [60 9 60 18]
              ]
            ]
          ]
          [
            expr: find/match
            range: [61 2 61 12]
            upper: [59 104 62 2]
            syntax: [
              word: find
            ]
          ]
          [
            expr: "adb"
            range: [61 13 61 18]
            upper: [59 104 62 2]
          ]
          [
            expr: "a"
            range: [61 19 61 22]
            upper: [59 104 62 2]
          ]
        ]
        syntax: [
          type: body
          parent: [59 5 59 9]
        ]
      ]
      [
        expr: fh1:
        range: [64 1 64 5]
        upper: [1 1 77 1]
        syntax: [
          step: 2
          cast: [64 6 64 9]
        ]
      ]
      [
        expr: has
        range: [64 6 64 9]
        upper: [1 1 77 1]
        syntax: [
          word: has
          step: 2
          resolved: [
            spec: [64 10 64 20]
          ]
        ]
        error: [severity 1 code "miss-expr" source "Syntax" message "has -- need a type: block!"]
      ]
      [
        expr: [/ref a b]
        range: [64 10 64 20]
        upper: [1 1 77 1]
        nested: 
        [
          [
            expr: /ref
            range: [64 11 64 15]
            upper: [64 10 64 20]
            syntax: [
              type: func-refinement
              args: [
                params: [
                  [64 16 64 17]
                  [64 18 64 19]
                ]
              ]
            ]
            error: [severity 1 code "forbidden-refine" source "Syntax" message "/ref -- forbidden refinement: /ref"]
          ]
          [
            expr: a
            range: [64 16 64 17]
            upper: [64 10 64 20]
            syntax: [
              type: func-param
              args: [
                refs: [64 11 64 15]
              ]
            ]
          ]
          [
            expr: b
            range: [64 18 64 19]
            upper: [64 10 64 20]
            syntax: [
              type: func-param
              args: [
                refs: [64 11 64 15]
              ]
            ]
          ]
        ]
        syntax: [
          type: spec
          parent: [64 6 64 9]
        ]
      ]
      [
        expr: fh2:
        range: [65 1 65 5]
        upper: [1 1 77 1]
        syntax: [
          step: 2
          cast: [65 6 65 9]
        ]
      ]
      [
        expr: has
        range: [65 6 65 9]
        upper: [1 1 77 1]
        syntax: [
          word: has
          step: 3
          resolved: [
            spec: [65 10 65 15]
            body: [65 15 65 17]
          ]
        ]
      ]
      [
        expr: [a b]
        range: [65 10 65 15]
        upper: [1 1 77 1]
        nested: 
        [
          [
            expr: a
            range: [65 11 65 12]
            upper: [65 10 65 15]
            syntax: [
              type: func-param
              args: [
              ]
            ]
          ]
          [
            expr: b
            range: [65 13 65 14]
            upper: [65 10 65 15]
            syntax: [
              type: func-param
              args: [
              ]
            ]
          ]
        ]
        syntax: [
          type: spec
          parent: [65 6 65 9]
        ]
      ]
      [
        expr: []
        range: [65 15 65 17]
        upper: [1 1 77 1]
        syntax: [
          type: body
          parent: [65 6 65 9]
        ]
      ]
      [
        expr: z:
        range: [67 1 67 3]
        upper: [1 1 77 1]
        syntax: [
          step: 2
          cast: [67 4 67 5]
        ]
      ]
      [
        expr: z
        range: [67 4 67 5]
        upper: [1 1 77 1]
        syntax: [
          word: z
          recent: [67 1 67 3]
        ]
      ]
      [
        expr: blk:
        range: [69 1 69 5]
        upper: [1 1 77 1]
        syntax: [
          step: 2
          value: [69 6 69 12]
        ]
      ]
      [
        expr: [a: 1]
        range: [69 6 69 12]
        upper: [1 1 77 1]
        nested: 
        [
          [
            expr: a:
            range: [69 7 69 9]
            upper: [69 6 69 12]
          ]
          [
            expr: 1
            range: [69 10 69 11]
            upper: [69 6 69 12]
          ]
        ]
      ]
      [
        expr: ctx:
        range: [70 1 70 5]
        upper: [1 1 77 1]
        syntax: [
          step: 2
          cast: [70 6 70 13]
        ]
      ]
      [
        expr: context
        range: [70 6 70 13]
        upper: [1 1 77 1]
        syntax: [
          word: context
          step: 2
          resolved: [
            spec: [70 14 72 2]
          ]
        ]
      ]
      [
        expr: [a: none]
        range: [70 14 72 2]
        upper: [1 1 77 1]
        nested: 
        [
          [
            expr: a:
            range: [71 2 71 4]
            upper: [70 14 72 2]
            syntax: [
              step: 2
              cast: [71 5 71 9]
              recent: [3 1 3 3]
            ]
          ]
          [
            expr: none
            range: [71 5 71 9]
            upper: [70 14 72 2]
            syntax: [
              word: none
            ]
          ]
        ]
        syntax: [
          type: spec
          parent: [70 6 70 13]
        ]
      ]
      [
        expr: do
        range: [74 1 74 3]
        upper: [1 1 77 1]
        syntax: [
          word: do
        ]
      ]
      [
        expr: bind
        range: [74 4 74 8]
        upper: [1 1 77 1]
        syntax: [
          word: bind
        ]
      ]
      [
        expr: blk
        range: [74 9 74 12]
        upper: [1 1 77 1]
        syntax: [
          word: blk
          recent: [69 1 69 5]
        ]
      ]
      [
        expr: ctx
        range: [74 13 74 16]
        upper: [1 1 77 1]
        syntax: [
          word: ctx
          recent: [70 1 70 5]
        ]
      ]
      [
        expr: if
        range: [76 1 76 3]
        upper: [1 1 77 1]
        syntax: [
          word: if
        ]
      ]
      [
        expr: all
        range: [76 4 76 7]
        upper: [1 1 77 1]
        syntax: [
          word: all
          step: 3
          resolved: [
            spec: [76 12 76 30]
          ]
        ]
      ]
      [
        expr: tt:
        range: [76 8 76 11]
        upper: [1 1 77 1]
        syntax: [
          step: 2
          value: [76 12 76 30]
        ]
      ]
      [
        expr: [a = 1 integer? a]
        range: [76 12 76 30]
        upper: [1 1 77 1]
        nested: 
        [
          [
            expr: a
            range: [76 13 76 14]
            upper: [76 12 76 30]
            syntax: [
              word: a
              recent: [3 1 3 3]
            ]
          ]
          [
            expr: =
            range: [76 15 76 16]
            upper: [76 12 76 30]
            syntax: [
              word: =
            ]
          ]
          [
            expr: 1
            range: [76 17 76 18]
            upper: [76 12 76 30]
          ]
          [
            expr: integer?
            range: [76 19 76 27]
            upper: [76 12 76 30]
            syntax: [
              word: integer?
            ]
          ]
          [
            expr: a
            range: [76 28 76 29]
            upper: [76 12 76 30]
            syntax: [
              word: a
              recent: [3 1 3 3]
            ]
          ]
        ]
        syntax: [
          type: spec
          parent: [76 4 76 7]
        ]
      ]
      [
        expr: [print 3]
        range: [76 30 76 39]
        upper: [1 1 77 1]
        nested: 
        [
          [
            expr: print
            range: [76 31 76 36]
            upper: [76 30 76 39]
          ]
          [
            expr: 3
            range: [76 37 76 38]
            upper: [76 30 76 39]
          ]
        ]
      ]
    ]
    source: {Red he: []^/^/a: 'tes
    syntax: [
      extra: [
        [10 4 10 7]
        [24 4 24 6]
        [25 4 25 6]
        [35 5 35 7]
        [35 10 35 12]
      ]
      type: top
    ]
  ]
]
Error/Warning: ---------------------------------------
[#(
    severity: 1
    code: "miss-expr"
    source: "Syntax"
    message: "he: -- need a type: block! for Red File header"
    range: #(
        start: #(
            line: 0
            character: 4
        )
        end: #(
            line: 0
            character: 7
        )
    )
) #(
    severity: 1
    code: "invalid-datatype"
    source: "Syntax"
    message: "test -- invalid datatype: test"
    range: #(
        start: #(
            line: 38
            character: 4
        )
        end: #(
            line: 38
            character: 8
        )
    )
) #(
    severity: 1
    code: "invalid-datatype"
    source: "Syntax"
    message: "test! -- invalid datatype: test!"
    range: #(
        start: #(
            line: 39
            character: 4
        )
        end: #(
            line: 39
            character: 9
        )
    )
) #(
    severity: 1
    code: "invalid-arg"
    source: "Syntax"
    message: "return: -- invalid argument for: c"
    range: #(
        start: #(
            line: 58
            character: 39
        )
        end: #(
            line: 58
            character: 46
        )
    )
) #(
    severity: 1
    code: "double-define"
    source: "Syntax"
    message: "/c -- double define: c"
    range: #(
        start: #(
            line: 58
            character: 71
        )
        end: #(
            line: 58
            character: 73
        )
    )
) #(
    severity: 1
    code: "double-define"
    source: "Syntax"
    message: "a -- double define: a"
    range: #(
        start: #(
            line: 58
            character: 74
        )
        end: #(
            line: 58
            character: 75
        )
    )
) #(
    severity: 1
    code: "miss-expr"
    source: "Syntax"
    message: "has -- need a type: block!"
    range: #(
        start: #(
            line: 63
            character: 5
        )
        end: #(
            line: 63
            character: 8
        )
    )
) #(
    severity: 1
    code: "forbidden-refine"
    source: "Syntax"
    message: "/ref -- forbidden refinement: /ref"
    range: #(
        start: #(
            line: 63
            character: 10
        )
        end: #(
            line: 63
            character: 14
        )
    )
)]

[
  [
    expr: none
    range: [1 1 77 1]
    nested: 
    [
      [
        expr: f1:
        range: [11 5 11 8]
        upper: [10 43 19 5]
      ]
      [
        expr: f2:
        range: [12 5 12 8]
        upper: [10 43 19 5]
      ]
      [
        expr: f3:
        range: [13 5 13 8]
        upper: [10 43 19 5]
      ]
      [
        expr: f4:
        range: [14 5 14 8]
        upper: [10 43 19 5]
      ]
      [
        expr: f5:
        range: [15 5 15 8]
        upper: [10 43 19 5]
      ]
      [
        expr: f6:
        range: [16 5 16 8]
        upper: [10 43 19 5]
      ]
      [
        expr: f7:
        range: [17 5 17 8]
        upper: [10 43 19 5]
      ]
      [
        expr: ff:
        range: [10 4 10 7]
        upper: [9 36 26 4]
      ]
      [
        expr: fff:
        range: [57 1 57 5]
        upper: [1 1 77 1]
      ]
      [
        expr: ft:
        range: [59 1 59 4]
        upper: [1 1 77 1]
      ]
      [
        expr: fh1:
        range: [64 1 64 5]
        upper: [1 1 77 1]
      ]
      [
        expr: fh2:
        range: [65 1 65 5]
        upper: [1 1 77 1]
      ]
    ]
    source: {Red he: []^/^/a: 'tes
  ]
]
