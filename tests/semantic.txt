
[
  [
    expr: [Red he: [] a: 'test
    range: [1 1 76 1]
    depth: 0
    nested: 
    [
      [
        expr: Red
        range: [1 1 1 4]
        depth: 1
        syntax: [
          word: Red
        ]
      ]
      [
        expr: he:
        range: [1 5 1 8]
        depth: 1
        syntax: [
          step: 2
          value: [1 9 1 11]
        ]
        error: [severity 1 code "miss-expr" source "Syntax" message "he: -- need a type: block! for Red File header"]
      ]
      [
        expr: []
        range: [1 9 1 11]
        depth: 1
      ]
      [
        expr: a:
        range: [3 1 3 3]
        depth: 1
        syntax: [
          step: 2
          value: [3 4 3 9]
        ]
      ]
      [
        expr: 'test
        range: [3 4 3 9]
        depth: 1
      ]
      [
        expr: b:
        range: [4 1 4 3]
        depth: 1
        syntax: [
          step: 2
          cast: [4 4 4 11]
        ]
      ]
      [
        expr: context
        range: [4 4 4 11]
        depth: 1
        syntax: [
          word: context
          step: 2
          resolved: [
            spec: [4 12 32 2]
          ]
        ]
      ]
      [
        expr: [c: 4 d: context [e:
        range: [4 12 32 2]
        depth: 1
        nested: 
        [
          [
            expr: c:
            range: [5 2 5 4]
            depth: 2
            syntax: [
              step: 2
              value: [5 5 5 6]
            ]
          ]
          [
            expr: 4
            range: [5 5 5 6]
            depth: 2
          ]
          [
            expr: d:
            range: [6 2 6 4]
            depth: 2
            syntax: [
              step: 2
              cast: [6 5 6 12]
            ]
          ]
          [
            expr: context
            range: [6 5 6 12]
            depth: 2
            syntax: [
              word: context
              step: 2
              resolved: [
                spec: [6 13 27 3]
              ]
            ]
          ]
          [
            expr: [e: #{12} f: func [x
            range: [6 13 27 3]
            depth: 2
            nested: 
            [
              [
                expr: e:
                range: [7 3 7 5]
                depth: 3
                syntax: [
                  step: 2
                  value: [7 6 7 11]
                ]
              ]
              [
                expr: #{12}
                range: [7 6 7 11]
                depth: 3
              ]
              [
                expr: f:
                range: [8 3 8 5]
                depth: 3
                syntax: [
                  step: 2
                  cast: [8 6 8 10]
                ]
              ]
              [
                expr: func
                range: [8 6 8 10]
                depth: 3
                syntax: [
                  word: func
                  step: 3
                  resolved: [
                    spec: [8 11 8 36]
                    body: [8 36 25 4]
                  ]
                ]
              ]
              [
                expr: [x [block!] y [integ
                range: [8 11 8 36]
                depth: 3
                nested: 
                [
                  [
                    expr: x
                    range: [8 12 8 13]
                    depth: 4
                    syntax: [
                      type: func-param
                      args: [
                        type: [8 14 8 22]
                      ]
                    ]
                  ]
                  [
                    expr: [block!]
                    range: [8 14 8 22]
                    depth: 4
                    nested: 
                    [
                      [
                        expr: block!
                        range: [8 15 8 21]
                        depth: 5
                        syntax: [
                          type: func-type-item
                        ]
                      ]
                    ]
                    syntax: [
                      type: func-type
                      parent: [8 12 8 13]
                    ]
                  ]
                  [
                    expr: y
                    range: [8 23 8 24]
                    depth: 4
                    syntax: [
                      type: func-param
                      args: [
                        type: [8 25 8 35]
                      ]
                    ]
                  ]
                  [
                    expr: [integer!]
                    range: [8 25 8 35]
                    depth: 4
                    nested: 
                    [
                      [
                        expr: integer!
                        range: [8 26 8 34]
                        depth: 5
                        syntax: [
                          type: func-type-item
                        ]
                      ]
                    ]
                    syntax: [
                      type: func-type
                      parent: [8 23 8 24]
                    ]
                  ]
                ]
              ]
              [
                expr: [ff: function [a [in
                range: [8 36 25 4]
                depth: 3
                nested: 
                [
                  [
                    expr: ff:
                    range: [9 4 9 7]
                    depth: 4
                    syntax: [
                      step: 2
                      cast: [9 8 9 16]
                    ]
                  ]
                  [
                    expr: function
                    range: [9 8 9 16]
                    depth: 4
                    syntax: [
                      word: function
                      step: 3
                      resolved: [
                        spec: [9 17 9 43]
                        body: [9 43 18 5]
                      ]
                    ]
                  ]
                  [
                    expr: [a [integer!] b [bin
                    range: [9 17 9 43]
                    depth: 4
                    nested: 
                    [
                      [
                        expr: a
                        range: [9 18 9 19]
                        depth: 5
                        syntax: [
                          type: func-param
                          args: [
                            type: [9 20 9 30]
                          ]
                        ]
                      ]
                      [
                        expr: [integer!]
                        range: [9 20 9 30]
                        depth: 5
                        nested: 
                        [
                          [
                            expr: integer!
                            range: [9 21 9 29]
                            depth: 6
                            syntax: [
                              type: func-type-item
                            ]
                          ]
                        ]
                        syntax: [
                          type: func-type
                          parent: [9 18 9 19]
                        ]
                      ]
                      [
                        expr: b
                        range: [9 31 9 32]
                        depth: 5
                        syntax: [
                          type: func-param
                          args: [
                            type: [9 33 9 42]
                          ]
                        ]
                      ]
                      [
                        expr: [binary!]
                        range: [9 33 9 42]
                        depth: 5
                        nested: 
                        [
                          [
                            expr: binary!
                            range: [9 34 9 41]
                            depth: 6
                            syntax: [
                              type: func-type-item
                            ]
                          ]
                        ]
                        syntax: [
                          type: func-type
                          parent: [9 31 9 32]
                        ]
                      ]
                    ]
                  ]
                  [
                    expr: [f1: "test" f2: x f3
                    range: [9 43 18 5]
                    depth: 4
                    nested: 
                    [
                      [
                        expr: f1:
                        range: [10 5 10 8]
                        depth: 5
                        syntax: [
                          step: 2
                          value: [10 9 10 15]
                          declare: [9 17 9 43]
                        ]
                      ]
                      [
                        expr: "test"
                        range: [10 9 10 15]
                        depth: 5
                      ]
                      [
                        expr: f2:
                        range: [11 5 11 8]
                        depth: 5
                        syntax: [
                          step: 2
                          cast: [11 9 11 10]
                          declare: [9 17 9 43]
                        ]
                      ]
                      [
                        expr: x
                        range: [11 9 11 10]
                        depth: 5
                        syntax: [
                          word: x
                          declare: [9 17 9 43]
                        ]
                      ]
                      [
                        expr: f3:
                        range: [12 5 12 8]
                        depth: 5
                        syntax: [
                          step: 2
                          cast: [12 9 12 11]
                          declare: [9 17 9 43]
                        ]
                      ]
                      [
                        expr: f1
                        range: [12 9 12 11]
                        depth: 5
                        syntax: [
                          word: f1
                          declare: [9 17 9 43]
                        ]
                      ]
                      [
                        expr: f4:
                        range: [13 5 13 8]
                        depth: 5
                        syntax: [
                          step: 2
                          cast: [13 9 13 10]
                          declare: [9 17 9 43]
                        ]
                      ]
                      [
                        expr: l
                        range: [13 9 13 10]
                        depth: 5
                        syntax: [
                          word: l
                          declare: [9 17 9 43]
                        ]
                      ]
                      [
                        expr: f5:
                        range: [14 5 14 8]
                        depth: 5
                        syntax: [
                          declare: [9 17 9 43]
                        ]
                      ]
                      [
                        expr: :f
                        range: [14 9 14 11]
                        depth: 5
                        syntax: [
                          word: f
                          declare: [9 17 9 43]
                        ]
                      ]
                      [
                        expr: f6:
                        range: [15 5 15 8]
                        depth: 5
                        syntax: [
                          step: 2
                          cast: [15 9 15 11]
                          declare: [9 17 9 43]
                        ]
                      ]
                      [
                        expr: f5
                        range: [15 9 15 11]
                        depth: 5
                        syntax: [
                          word: f5
                          declare: [9 17 9 43]
                        ]
                      ]
                      [
                        expr: f7:
                        range: [16 5 16 8]
                        depth: 5
                        syntax: [
                          step: 2
                          cast: [16 9 16 10]
                          declare: [9 17 9 43]
                        ]
                      ]
                      [
                        expr: a
                        range: [16 9 16 10]
                        depth: 5
                        syntax: [
                          word: a
                          declare: [9 17 9 43]
                        ]
                      ]
                      [
                        expr: +
                        range: [16 11 16 12]
                        depth: 5
                        syntax: [
                          word: +
                          declare: [9 17 9 43]
                        ]
                      ]
                      [
                        expr: length?
                        range: [16 13 16 20]
                        depth: 5
                        syntax: [
                          word: length?
                          declare: [9 17 9 43]
                        ]
                      ]
                      [
                        expr: b
                        range: [16 21 16 22]
                        depth: 5
                        syntax: [
                          word: b
                          declare: [9 17 9 43]
                        ]
                      ]
                      [
                        expr: f
                        range: [17 5 17 6]
                        depth: 5
                        syntax: [
                          word: f
                          declare: [9 17 9 43]
                        ]
                      ]
                    ]
                  ]
                  [
                    expr: x:
                    range: [19 4 19 6]
                    depth: 4
                    syntax: [
                      step: 2
                      value: [19 7 19 8]
                      declare: [8 12 8 13]
                    ]
                  ]
                  [
                    expr: 1
                    range: [19 7 19 8]
                    depth: 4
                  ]
                  [
                    expr: y:
                    range: [20 4 20 6]
                    depth: 4
                    syntax: [
                      step: 2
                      value: [20 7 20 8]
                      declare: [8 23 8 24]
                    ]
                  ]
                  [
                    expr: 1
                    range: [20 7 20 8]
                    depth: 4
                  ]
                  [
                    expr: e:
                    range: [21 4 21 6]
                    depth: 4
                    syntax: [
                      step: 2
                      cast: [21 7 21 8]
                    ]
                  ]
                  [
                    expr: x
                    range: [21 7 21 8]
                    depth: 4
                    syntax: [
                      word: x
                      declare: [8 12 8 13]
                    ]
                  ]
                  [
                    expr: +
                    range: [21 9 21 10]
                    depth: 4
                    syntax: [
                      word: +
                    ]
                  ]
                  [
                    expr: y
                    range: [21 11 21 12]
                    depth: 4
                    syntax: [
                      word: y
                      declare: [8 23 8 24]
                    ]
                  ]
                  [
                    expr: o:
                    range: [22 4 22 6]
                    depth: 4
                    syntax: [
                      step: 2
                      cast: [22 7 22 8]
                    ]
                  ]
                  [
                    expr: g
                    range: [22 7 22 8]
                    depth: 4
                    syntax: [
                      word: g
                    ]
                  ]
                  [
                    expr: t:
                    range: [23 4 23 6]
                    depth: 4
                    syntax: [
                      step: 2
                      cast: [23 7 23 8]
                    ]
                  ]
                  [
                    expr: h
                    range: [23 7 23 8]
                    depth: 4
                    syntax: [
                      word: h
                    ]
                  ]
                  [
                    expr: u:
                    range: [24 4 24 6]
                    depth: 4
                    syntax: [
                      step: 2
                      cast: [24 7 24 8]
                    ]
                  ]
                  [
                    expr: x
                    range: [24 7 24 8]
                    depth: 4
                    syntax: [
                      word: x
                      declare: [8 12 8 13]
                    ]
                  ]
                ]
              ]
              [
                expr: g:
                range: [26 3 26 5]
                depth: 3
                syntax: [
                  step: 2
                  value: [26 6 26 8]
                ]
              ]
              [
                expr: []
                range: [26 6 26 8]
                depth: 3
              ]
            ]
          ]
          [
            expr: h:
            range: [28 2 28 4]
            depth: 2
            syntax: [
              step: 2
              value: [28 5 28 12]
            ]
          ]
          [
            expr: #(a: 3)
            range: [28 5 28 12]
            depth: 2
            nested: 
            [
              [
                expr: a:
                range: [28 7 28 9]
                depth: 3
              ]
              [
                expr: 3
                range: [28 10 28 11]
                depth: 3
              ]
            ]
          ]
          [
            expr: i:
            range: [29 2 29 4]
            depth: 2
            syntax: [
              step: 2
              cast: [29 5 29 6]
            ]
          ]
          [
            expr: x
            range: [29 5 29 6]
            depth: 2
            syntax: [
              word: x
            ]
          ]
          [
            expr: j:
            range: [30 2 30 4]
            depth: 2
            syntax: [
              step: 2
              cast: [30 5 30 6]
            ]
          ]
          [
            expr: e
            range: [30 5 30 6]
            depth: 2
            syntax: [
              word: e
            ]
          ]
          [
            expr: k:
            range: [31 2 31 4]
            depth: 2
            syntax: [
              step: 2
              cast: [31 5 31 6]
            ]
          ]
          [
            expr: t
            range: [31 5 31 6]
            depth: 2
            syntax: [
              word: t
            ]
          ]
        ]
      ]
      [
        expr: l:
        range: [34 1 34 3]
        depth: 1
        syntax: [
          step: 2
          value: [34 4 34 15]
        ]
      ]
      [
        expr: (m: 3 n: a)
        range: [34 4 34 15]
        depth: 1
        nested: 
        [
          [
            expr: m:
            range: [34 5 34 7]
            depth: 2
            syntax: [
              step: 2
              value: [34 8 34 9]
            ]
          ]
          [
            expr: 3
            range: [34 8 34 9]
            depth: 2
          ]
          [
            expr: n:
            range: [34 10 34 12]
            depth: 2
            syntax: [
              step: 2
              cast: [34 13 34 14]
            ]
          ]
          [
            expr: a
            range: [34 13 34 14]
            depth: 2
            syntax: [
              word: a
            ]
          ]
        ]
      ]
      [
        expr: o:
        range: [35 1 35 3]
        depth: 1
        syntax: [
          step: 2
          cast: [35 4 35 5]
        ]
      ]
      [
        expr: l
        range: [35 4 35 5]
        depth: 1
        syntax: [
          word: l
        ]
      ]
      [
        expr: r:
        range: [37 1 37 3]
        depth: 1
        syntax: [
          step: 2
          cast: [37 4 37 8]
        ]
      ]
      [
        expr: func
        range: [37 4 37 8]
        depth: 1
        syntax: [
          word: func
          step: 3
          resolved: [
            spec: [37 9 43 2]
            body: [43 2 46 2]
          ]
        ]
      ]
      [
        expr: [a [test] b [test!] 
        range: [37 9 43 2]
        depth: 1
        nested: 
        [
          [
            expr: a
            range: [38 2 38 3]
            depth: 2
            syntax: [
              type: func-param
              args: [
                type: [38 4 38 10]
              ]
            ]
          ]
          [
            expr: [test]
            range: [38 4 38 10]
            depth: 2
            nested: 
            [
              [
                expr: test
                range: [38 5 38 9]
                depth: 3
                syntax: [
                  type: func-type-item
                ]
                error: [severity 1 code "invalid-datatype" source "Syntax" message "test -- invalid datatype: test"]
              ]
            ]
            syntax: [
              type: func-type
              parent: [38 2 38 3]
            ]
          ]
          [
            expr: b
            range: [39 2 39 3]
            depth: 2
            syntax: [
              type: func-param
              args: [
                type: [39 4 39 11]
              ]
            ]
          ]
          [
            expr: [test!]
            range: [39 4 39 11]
            depth: 2
            nested: 
            [
              [
                expr: test!
                range: [39 5 39 10]
                depth: 3
                syntax: [
                  type: func-type-item
                ]
                error: [severity 1 code "invalid-datatype" source "Syntax" message "test! -- invalid datatype: test!"]
              ]
            ]
            syntax: [
              type: func-type
              parent: [39 2 39 3]
            ]
          ]
          [
            expr: /part
            range: [40 2 40 7]
            depth: 2
            syntax: [
              type: func-refinement
              args: [
                params: [
                  [40 8 40 14]
                ]
              ]
            ]
          ]
          [
            expr: length
            range: [40 8 40 14]
            depth: 2
            syntax: [
              type: func-param
              args: [
                refs: [40 2 40 7]
                type: [40 15 40 33]
              ]
            ]
          ]
          [
            expr: [integer! string!]
            range: [40 15 40 33]
            depth: 2
            nested: 
            [
              [
                expr: integer!
                range: [40 16 40 24]
                depth: 3
                syntax: [
                  type: func-type-item
                ]
              ]
              [
                expr: string!
                range: [40 25 40 32]
                depth: 3
                syntax: [
                  type: func-type-item
                ]
              ]
            ]
            syntax: [
              type: func-type
              parent: [40 8 40 14]
            ]
          ]
          [
            expr: return:
            range: [41 2 41 9]
            depth: 2
            syntax: [
              type: func-return
              args: [
                type: [41 10 41 18]
              ]
            ]
          ]
          [
            expr: [block!]
            range: [41 10 41 18]
            depth: 2
            nested: 
            [
              [
                expr: block!
                range: [41 11 41 17]
                depth: 3
                syntax: [
                  type: func-type-item
                ]
              ]
            ]
            syntax: [
              type: func-type
              parent: [41 2 41 9]
            ]
          ]
          [
            expr: /local
            range: [42 2 42 8]
            depth: 2
            syntax: [
              type: func-refinement
              args: [
                params: [
                  [42 9 42 10]
                  [42 11 42 12]
                ]
              ]
            ]
          ]
          [
            expr: x
            range: [42 9 42 10]
            depth: 2
            syntax: [
              type: func-param
              args: [
                refs: [42 2 42 8]
              ]
            ]
          ]
          [
            expr: y
            range: [42 11 42 12]
            depth: 2
            syntax: [
              type: func-param
              args: [
                refs: [42 2 42 8]
              ]
            ]
          ]
        ]
      ]
      [
        expr: [x: 1 y: 1 a + b + 1
        range: [43 2 46 2]
        depth: 1
        nested: 
        [
          [
            expr: x:
            range: [44 2 44 4]
            depth: 2
            syntax: [
              step: 2
              value: [44 5 44 6]
              declare: [42 9 42 10]
            ]
          ]
          [
            expr: 1
            range: [44 5 44 6]
            depth: 2
          ]
          [
            expr: y:
            range: [44 7 44 9]
            depth: 2
            syntax: [
              step: 2
              value: [44 10 44 11]
              declare: [42 11 42 12]
            ]
          ]
          [
            expr: 1
            range: [44 10 44 11]
            depth: 2
          ]
          [
            expr: a
            range: [45 2 45 3]
            depth: 2
            syntax: [
              word: a
              declare: [38 2 38 3]
            ]
          ]
          [
            expr: +
            range: [45 4 45 5]
            depth: 2
            syntax: [
              word: +
            ]
          ]
          [
            expr: b
            range: [45 6 45 7]
            depth: 2
            syntax: [
              word: b
              declare: [39 2 39 3]
            ]
          ]
          [
            expr: +
            range: [45 8 45 9]
            depth: 2
            syntax: [
              word: +
            ]
          ]
          [
            expr: 1
            range: [45 10 45 11]
            depth: 2
          ]
          [
            expr: +
            range: [45 12 45 13]
            depth: 2
            syntax: [
              word: +
            ]
          ]
          [
            expr: 1
            range: [45 14 45 15]
            depth: 2
          ]
        ]
      ]
      [
        expr: s:
        range: [48 1 48 3]
        depth: 1
        syntax: [
          step: 2
          cast: [48 4 48 12]
        ]
      ]
      [
        expr: function
        range: [48 4 48 12]
        depth: 1
        syntax: [
          word: function
          step: 3
          resolved: [
            spec: [48 13 48 56]
            body: [48 56 54 2]
          ]
        ]
      ]
      [
        expr: [uri [string!] code 
        range: [48 13 48 56]
        depth: 1
        nested: 
        [
          [
            expr: uri
            range: [48 14 48 17]
            depth: 2
            syntax: [
              type: func-param
              args: [
                type: [48 18 48 27]
              ]
            ]
          ]
          [
            expr: [string!]
            range: [48 18 48 27]
            depth: 2
            nested: 
            [
              [
                expr: string!
                range: [48 19 48 26]
                depth: 3
                syntax: [
                  type: func-type-item
                ]
              ]
            ]
            syntax: [
              type: func-type
              parent: [48 14 48 17]
            ]
          ]
          [
            expr: code
            range: [48 28 48 32]
            depth: 2
            syntax: [
              type: func-param
              args: [
                type: [48 33 48 42]
              ]
            ]
          ]
          [
            expr: [string!]
            range: [48 33 48 42]
            depth: 2
            nested: 
            [
              [
                expr: string!
                range: [48 34 48 41]
                depth: 3
                syntax: [
                  type: func-type-item
                ]
              ]
            ]
            syntax: [
              type: func-type
              parent: [48 28 48 32]
            ]
          ]
          [
            expr: blk
            range: [48 43 48 46]
            depth: 2
            syntax: [
              type: func-param
              args: [
                type: [48 47 48 55]
              ]
            ]
          ]
          [
            expr: [block!]
            range: [48 47 48 55]
            depth: 2
            nested: 
            [
              [
                expr: block!
                range: [48 48 48 54]
                depth: 3
                syntax: [
                  type: func-type-item
                ]
              ]
            ]
            syntax: [
              type: func-type
              parent: [48 43 48 46]
            ]
          ]
        ]
      ]
      [
        expr: [either uri [return 
        range: [48 56 54 2]
        depth: 1
        nested: 
        [
          [
            expr: either
            range: [49 2 49 8]
            depth: 2
            syntax: [
              word: either
              declare: [48 13 48 56]
            ]
          ]
          [
            expr: uri
            range: [49 9 49 12]
            depth: 2
            syntax: [
              word: uri
              declare: [48 13 48 56]
            ]
          ]
          [
            expr: [return reduce [uri 
            range: [49 13 51 3]
            depth: 2
            nested: 
            [
              [
                expr: return
                range: [50 3 50 9]
                depth: 3
              ]
              [
                expr: reduce
                range: [50 10 50 16]
                depth: 3
              ]
              [
                expr: [uri code blk]
                range: [50 17 50 31]
                depth: 3
                nested: 
                [
                  [
                    expr: uri
                    range: [50 18 50 21]
                    depth: 4
                  ]
                  [
                    expr: code
                    range: [50 22 50 26]
                    depth: 4
                  ]
                  [
                    expr: blk
                    range: [50 27 50 30]
                    depth: 4
                  ]
                ]
              ]
            ]
          ]
          [
            expr: [return reduce [uri 
            range: [51 3 53 3]
            depth: 2
            nested: 
            [
              [
                expr: return
                range: [52 3 52 9]
                depth: 3
              ]
              [
                expr: reduce
                range: [52 10 52 16]
                depth: 3
              ]
              [
                expr: [uri code blk]
                range: [52 17 52 31]
                depth: 3
                nested: 
                [
                  [
                    expr: uri
                    range: [52 18 52 21]
                    depth: 4
                  ]
                  [
                    expr: code
                    range: [52 22 52 26]
                    depth: 4
                  ]
                  [
                    expr: blk
                    range: [52 27 52 30]
                    depth: 4
                  ]
                ]
              ]
            ]
          ]
        ]
      ]
      [
        expr: fff:
        range: [56 1 56 5]
        depth: 1
        syntax: [
          step: 2
          value: [56 6 56 7]
        ]
      ]
      [
        expr: 3
        range: [56 6 56 7]
        depth: 1
      ]
      [
        expr: ft:
        range: [58 1 58 4]
        depth: 1
        syntax: [
          step: 2
          cast: [58 5 58 9]
        ]
      ]
      [
        expr: func
        range: [58 5 58 9]
        depth: 1
        syntax: [
          word: func
          step: 3
          resolved: [
            spec: [58 10 58 104]
            body: [58 104 61 2]
          ]
        ]
      ]
      [
        expr: [a [block!] b [map! 
        range: [58 10 58 104]
        depth: 1
        nested: 
        [
          [
            expr: a
            range: [58 11 58 12]
            depth: 2
            syntax: [
              type: func-param
              args: [
                type: [58 13 58 21]
              ]
            ]
          ]
          [
            expr: [block!]
            range: [58 13 58 21]
            depth: 2
            nested: 
            [
              [
                expr: block!
                range: [58 14 58 20]
                depth: 3
                syntax: [
                  type: func-type-item
                ]
              ]
            ]
            syntax: [
              type: func-type
              parent: [58 11 58 12]
            ]
          ]
          [
            expr: b
            range: [58 22 58 23]
            depth: 2
            syntax: [
              type: func-param
              args: [
                type: [58 24 58 39]
              ]
            ]
          ]
          [
            expr: [map! integer!]
            range: [58 24 58 39]
            depth: 2
            nested: 
            [
              [
                expr: map!
                range: [58 25 58 29]
                depth: 3
                syntax: [
                  type: func-type-item
                ]
              ]
              [
                expr: integer!
                range: [58 30 58 38]
                depth: 3
                syntax: [
                  type: func-type-item
                ]
              ]
            ]
            syntax: [
              type: func-type
              parent: [58 22 58 23]
            ]
          ]
          [
            expr: return:
            range: [58 40 58 47]
            depth: 2
            syntax: [
              type: func-return
              args: [
                type: [58 48 58 58]
              ]
            ]
            error: [severity 1 code "invalid-arg" source "Syntax" message "return: -- invalid argument for: c"]
          ]
          [
            expr: [integer!]
            range: [58 48 58 58]
            depth: 2
            nested: 
            [
              [
                expr: integer!
                range: [58 49 58 57]
                depth: 3
                syntax: [
                  type: func-type-item
                ]
              ]
            ]
            syntax: [
              type: func-type
              parent: [58 40 58 47]
            ]
          ]
          [
            expr: c
            range: [58 59 58 60]
            depth: 2
            syntax: [
              type: func-param
              args: [
                type: [58 61 58 71]
              ]
            ]
          ]
          [
            expr: [integer!]
            range: [58 61 58 71]
            depth: 2
            nested: 
            [
              [
                expr: integer!
                range: [58 62 58 70]
                depth: 3
                syntax: [
                  type: func-type-item
                ]
              ]
            ]
            syntax: [
              type: func-type
              parent: [58 59 58 60]
            ]
          ]
          [
            expr: /c
            range: [58 72 58 74]
            depth: 2
            syntax: [
              type: func-refinement
              args: [
                params: [
                  [58 75 58 76]
                ]
              ]
            ]
            error: [severity 1 code "double-define" source "Syntax" message "/c -- double define: c"]
          ]
          [
            expr: a
            range: [58 75 58 76]
            depth: 2
            syntax: [
              type: func-param
              args: [
                refs: [58 72 58 74]
                type: [58 77 58 87]
              ]
            ]
            error: [severity 1 code "double-define" source "Syntax" message "a -- double define: a"]
          ]
          [
            expr: [integer!]
            range: [58 77 58 87]
            depth: 2
            nested: 
            [
              [
                expr: integer!
                range: [58 78 58 86]
                depth: 3
                syntax: [
                  type: func-type-item
                ]
              ]
            ]
            syntax: [
              type: func-type
              parent: [58 75 58 76]
            ]
          ]
          [
            expr: /d
            range: [58 88 58 90]
            depth: 2
            syntax: [
              type: func-refinement
              args: [
                params: [
                ]
              ]
            ]
          ]
          [
            expr: /local
            range: [58 91 58 97]
            depth: 2
            syntax: [
              type: func-refinement
              args: [
                params: [
                  [58 98 58 99]
                  [58 100 58 101]
                  [58 102 58 103]
                ]
              ]
            ]
          ]
          [
            expr: x
            range: [58 98 58 99]
            depth: 2
            syntax: [
              type: func-param
              args: [
                refs: [58 91 58 97]
              ]
            ]
          ]
          [
            expr: y
            range: [58 100 58 101]
            depth: 2
            syntax: [
              type: func-param
              args: [
                refs: [58 91 58 97]
              ]
            ]
          ]
          [
            expr: z
            range: [58 102 58 103]
            depth: 2
            syntax: [
              type: func-param
              args: [
                refs: [58 91 58 97]
              ]
            ]
          ]
        ]
      ]
      [
        expr: [reduce [a b c d] fi
        range: [58 104 61 2]
        depth: 1
        nested: 
        [
          [
            expr: reduce
            range: [59 2 59 8]
            depth: 2
            syntax: [
              word: reduce
            ]
          ]
          [
            expr: [a b c d]
            range: [59 9 59 18]
            depth: 2
            nested: 
            [
              [
                expr: a
                range: [59 10 59 11]
                depth: 3
              ]
              [
                expr: b
                range: [59 12 59 13]
                depth: 3
              ]
              [
                expr: c
                range: [59 14 59 15]
                depth: 3
              ]
              [
                expr: d
                range: [59 16 59 17]
                depth: 3
              ]
            ]
          ]
          [
            expr: find/match
            range: [60 2 60 12]
            depth: 2
            syntax: [
              word: find
            ]
          ]
          [
            expr: "adb"
            range: [60 13 60 18]
            depth: 2
          ]
          [
            expr: "a"
            range: [60 19 60 22]
            depth: 2
          ]
        ]
      ]
      [
        expr: fh1:
        range: [63 1 63 5]
        depth: 1
        syntax: [
          step: 2
          cast: [63 6 63 9]
        ]
      ]
      [
        expr: has
        range: [63 6 63 9]
        depth: 1
        syntax: [
          word: has
          step: 2
          resolved: [
            spec: [63 10 63 20]
          ]
        ]
        error: [severity 1 code "miss-expr" source "Syntax" message "has -- need a type: block!"]
      ]
      [
        expr: [/ref a b]
        range: [63 10 63 20]
        depth: 1
        nested: 
        [
          [
            expr: /ref
            range: [63 11 63 15]
            depth: 2
            syntax: [
              type: func-refinement
              args: [
                params: [
                  [63 16 63 17]
                  [63 18 63 19]
                ]
              ]
            ]
            error: [severity 1 code "forbidden-refine" source "Syntax" message "/ref -- forbidden refinement: /ref"]
          ]
          [
            expr: a
            range: [63 16 63 17]
            depth: 2
            syntax: [
              type: func-param
              args: [
                refs: [63 11 63 15]
              ]
            ]
          ]
          [
            expr: b
            range: [63 18 63 19]
            depth: 2
            syntax: [
              type: func-param
              args: [
                refs: [63 11 63 15]
              ]
            ]
          ]
        ]
      ]
      [
        expr: fh2:
        range: [64 1 64 5]
        depth: 1
        syntax: [
          step: 2
          cast: [64 6 64 9]
        ]
      ]
      [
        expr: has
        range: [64 6 64 9]
        depth: 1
        syntax: [
          word: has
          step: 3
          resolved: [
            spec: [64 10 64 15]
            body: [64 15 64 17]
          ]
        ]
      ]
      [
        expr: [a b]
        range: [64 10 64 15]
        depth: 1
        nested: 
        [
          [
            expr: a
            range: [64 11 64 12]
            depth: 2
            syntax: [
              type: func-param
              args: [
              ]
            ]
          ]
          [
            expr: b
            range: [64 13 64 14]
            depth: 2
            syntax: [
              type: func-param
              args: [
              ]
            ]
          ]
        ]
      ]
      [
        expr: []
        range: [64 15 64 17]
        depth: 1
      ]
      [
        expr: z:
        range: [66 1 66 3]
        depth: 1
        syntax: [
          step: 2
          cast: [66 4 66 5]
        ]
      ]
      [
        expr: z
        range: [66 4 66 5]
        depth: 1
        syntax: [
          word: z
        ]
      ]
      [
        expr: blk:
        range: [68 1 68 5]
        depth: 1
        syntax: [
          step: 2
          value: [68 6 68 12]
        ]
      ]
      [
        expr: [a: 1]
        range: [68 6 68 12]
        depth: 1
        nested: 
        [
          [
            expr: a:
            range: [68 7 68 9]
            depth: 2
          ]
          [
            expr: 1
            range: [68 10 68 11]
            depth: 2
          ]
        ]
      ]
      [
        expr: ctx:
        range: [69 1 69 5]
        depth: 1
        syntax: [
          step: 2
          cast: [69 6 69 13]
        ]
      ]
      [
        expr: context
        range: [69 6 69 13]
        depth: 1
        syntax: [
          word: context
          step: 2
          resolved: [
            spec: [69 14 71 2]
          ]
        ]
      ]
      [
        expr: [a: none]
        range: [69 14 71 2]
        depth: 1
        nested: 
        [
          [
            expr: a:
            range: [70 2 70 4]
            depth: 2
            syntax: [
              step: 2
              cast: [70 5 70 9]
            ]
          ]
          [
            expr: none
            range: [70 5 70 9]
            depth: 2
            syntax: [
              word: none
            ]
          ]
        ]
      ]
      [
        expr: do
        range: [73 1 73 3]
        depth: 1
        syntax: [
          word: do
        ]
      ]
      [
        expr: bind
        range: [73 4 73 8]
        depth: 1
        syntax: [
          word: bind
        ]
      ]
      [
        expr: blk
        range: [73 9 73 12]
        depth: 1
        syntax: [
          word: blk
        ]
      ]
      [
        expr: ctx
        range: [73 13 73 16]
        depth: 1
        syntax: [
          word: ctx
        ]
      ]
      [
        expr: if
        range: [75 1 75 3]
        depth: 1
        syntax: [
          word: if
        ]
      ]
      [
        expr: all
        range: [75 4 75 7]
        depth: 1
        syntax: [
          word: all
          step: 3
          resolved: [
            spec: [75 12 75 30]
          ]
        ]
      ]
      [
        expr: tt:
        range: [75 8 75 11]
        depth: 1
        syntax: [
          step: 2
          value: [75 12 75 30]
        ]
      ]
      [
        expr: [a = 1 integer? a]
        range: [75 12 75 30]
        depth: 1
        nested: 
        [
          [
            expr: a
            range: [75 13 75 14]
            depth: 2
            syntax: [
              word: a
            ]
          ]
          [
            expr: =
            range: [75 15 75 16]
            depth: 2
            syntax: [
              word: =
            ]
          ]
          [
            expr: 1
            range: [75 17 75 18]
            depth: 2
          ]
          [
            expr: integer?
            range: [75 19 75 27]
            depth: 2
            syntax: [
              word: integer?
            ]
          ]
          [
            expr: a
            range: [75 28 75 29]
            depth: 2
            syntax: [
              word: a
            ]
          ]
        ]
      ]
      [
        expr: [print 3]
        range: [75 30 75 39]
        depth: 1
        nested: 
        [
          [
            expr: print
            range: [75 31 75 36]
            depth: 2
          ]
          [
            expr: 3
            range: [75 37 75 38]
            depth: 2
          ]
        ]
      ]
    ]
    source: {Red he: []^/^/a: 'tes
    max-depth: 6
    syntax: [
      extra: [
        [9 4 9 7]
        [23 4 23 6]
        [24 4 24 6]
        [34 5 34 7]
        [34 10 34 12]
      ]
      type: top
    ]
  ]
]
Error/Warning: ---------------------------------------
[#(
    severity: 1
    code: "miss-expr"
    source: "Syntax"
    message: "he: -- need a type: block! for Red File header"
    range: #(
        start: #(
            line: 0
            character: 4
        )
        end: #(
            line: 0
            character: 7
        )
    )
) #(
    severity: 1
    code: "invalid-datatype"
    source: "Syntax"
    message: "test -- invalid datatype: test"
    range: #(
        start: #(
            line: 37
            character: 4
        )
        end: #(
            line: 37
            character: 8
        )
    )
) #(
    severity: 1
    code: "invalid-datatype"
    source: "Syntax"
    message: "test! -- invalid datatype: test!"
    range: #(
        start: #(
            line: 38
            character: 4
        )
        end: #(
            line: 38
            character: 9
        )
    )
) #(
    severity: 1
    code: "invalid-arg"
    source: "Syntax"
    message: "return: -- invalid argument for: c"
    range: #(
        start: #(
            line: 57
            character: 39
        )
        end: #(
            line: 57
            character: 46
        )
    )
) #(
    severity: 1
    code: "double-define"
    source: "Syntax"
    message: "/c -- double define: c"
    range: #(
        start: #(
            line: 57
            character: 71
        )
        end: #(
            line: 57
            character: 73
        )
    )
) #(
    severity: 1
    code: "double-define"
    source: "Syntax"
    message: "a -- double define: a"
    range: #(
        start: #(
            line: 57
            character: 74
        )
        end: #(
            line: 57
            character: 75
        )
    )
) #(
    severity: 1
    code: "miss-expr"
    source: "Syntax"
    message: "has -- need a type: block!"
    range: #(
        start: #(
            line: 62
            character: 5
        )
        end: #(
            line: 62
            character: 8
        )
    )
) #(
    severity: 1
    code: "forbidden-refine"
    source: "Syntax"
    message: "/ref -- forbidden refinement: /ref"
    range: #(
        start: #(
            line: 62
            character: 10
        )
        end: #(
            line: 62
            character: 14
        )
    )
)]
