PS D:\vscode-ext\VScode-extension\server> ./red.exe --cli .\tests\red-test.red

[
  #(
    range: [1 1 67 1]
    expr:
    [
      #(
        range: [1 1 1 4]
        expr: Red
        depth: 1
        syntax: #(
          name: keyword-value
          step: 1
          meta: 1
          word: Red
        )
      )
      #(
        range: [1 5 1 8]
        expr: he:
        depth: 1
        syntax: #(
          name: set
          step: 2
          error: #(severity: 1 code: "miss-expr" source: "Syntax" message: "he: -- need a type: block! for Red File header")
          meta: 2
          cast: [1 9 1 11]
        )
      )
      #(
        range: [1 9 1 11]
        expr: []
        depth: 1
        syntax: #(
          name: block
          step: 1
        )
      )
      #(
        range: [3 1 3 3]
        expr: a:
        depth: 1
        syntax: #(
          name: set
          step: 2
          cast: [3 4 3 9]
        )
      )
      #(
        range: [3 4 3 9]
        expr: 'test
        depth: 1
        syntax: #(
          name: literal
          step: 1
        )
      )
      #(
        range: [4 1 4 3]
        expr: b:
        depth: 1
        syntax: #(
          name: set
          step: 2
          cast: [4 4 4 11]
        )
      )
      #(
        range: [4 4 4 11]
        expr: context
        depth: 1
        syntax: #(
          name: keyword-context
          step: 2
          word: context
          casts: #(
            spec: [4 12 31 2]
          )
          resolved: #(
            spec: [4 12 31 2]
          )
        )
      )
      #(
        range: [4 12 31 2]
        expr:
        [
          #(
            range: [5 2 5 4]
            expr: c:
            depth: 2
            syntax: #(
              name: set
              step: 2
              cast: [5 5 5 6]
            )
          )
          #(
            range: [5 5 5 6]
            expr: 4
            depth: 2
            syntax: #(
              name: literal
              step: 1
            )
          )
          #(
            range: [6 2 6 4]
            expr: d:
            depth: 2
            syntax: #(
              name: set
              step: 2
              cast: [6 5 6 12]
            )
          )
          #(
            range: [6 5 6 12]
            expr: context
            depth: 2
            syntax: #(
              name: keyword-context
              step: 2
              word: context
              casts: #(
                spec: [6 13 26 3]
              )
              resolved: #(
                spec: [6 13 26 3]
              )
            )
          )
          #(
            range: [6 13 26 3]
            expr:
            [
              #(
                range: [7 3 7 5]
                expr: e:
                depth: 3
                syntax: #(
                  name: set
                  step: 2
                  cast: [7 6 7 11]
                )
              )
              #(
                range: [7 6 7 11]
                expr: #{12}
                depth: 3
                syntax: #(
                  name: literal
                  step: 1
                )
              )
              #(
                range: [8 3 8 5]
                expr: f:
                depth: 3
                syntax: #(
                  name: set
                  step: 2
                  cast: [8 6 8 10]
                )
              )
              #(
                range: [8 6 8 10]
                expr: func
                depth: 3
                syntax: #(
                  name: keyword-func
                  step: 3
                  word: func
                  casts: #(
                    spec: [8 11 8 36]
                    body: [8 36 24 4]
                  )
                  resolved: #(
                    spec: [8 11 8 36]
                    body: [8 36 24 4]
                  )
                )
              )
              #(
                range: [8 11 8 36]
                expr:
                [
                  #(
                    range: [8 12 8 13]
                    expr: x
                    depth: 4
                    syntax: #(
                      name: func-param
                      args: #(
                        type: [8 14 8 22]
                      )
                    )
                  )
                  #(
                    range: [8 14 8 22]
                    expr:
                    [
                      #(
                        range: [8 15 8 21]
                        expr: block!
                        depth: 5
                        syntax: #(
                          name: func-type-item
                        )
                      )
                    ]
                    depth: 4
                    syntax: #(
                      name: func-type
                      parent: [8 12 8 13]
                      args: #(
                        types: [block!]
                      )
                    )
                  )
                  #(
                    range: [8 23 8 24]
                    expr: y
                    depth: 4
                    syntax: #(
                      name: func-param
                      args: #(
                        type: [8 25 8 35]
                      )
                    )
                  )
                  #(
                    range: [8 25 8 35]
                    expr:
                    [
                      #(
                        range: [8 26 8 34]
                        expr: integer!
                        depth: 5
                        syntax: #(
                          name: func-type-item
                        )
                      )
                    ]
                    depth: 4
                    syntax: #(
                      name: func-type
                      parent: [8 23 8 24]
                      args: #(
                        types: [integer!]
                      )
                    )
                  )
                ]
                depth: 3
                syntax: #(
                  name: block
                  step: 1
                )
              )
              #(
                range: [8 36 24 4]
                expr:
                [
                  #(
                    range: [9 4 9 7]
                    expr: ff:
                    depth: 4
                    syntax: #(
                      name: set
                      step: 2
                      cast: [9 8 9 16]
                    )
                  )
                  #(
                    range: [9 8 9 16]
                    expr: function
                    depth: 4
                    syntax: #(
                      name: keyword-function
                      step: 3
                      word: function
                      casts: #(
                        spec: [9 17 9 43]
                        body: [9 43 17 5]
                      )
                      resolved: #(
                        spec: [9 17 9 43]
                        body: [9 43 17 5]
                      )
                    )
                  )
                  #(
                    range: [9 17 9 43]
                    expr:
                    [
                      #(
                        range: [9 18 9 19]
                        expr: a
                        depth: 5
                        syntax: #(
                          name: func-param
                          args: #(
                            type: [9 20 9 30]
                          )
                        )
                      )
                      #(
                        range: [9 20 9 30]
                        expr:
                        [
                          #(
                            range: [9 21 9 29]
                            expr: integer!
                            depth: 6
                            syntax: #(
                              name: func-type-item
                            )
                          )
                        ]
                        depth: 5
                        syntax: #(
                          name: func-type
                          parent: [9 18 9 19]
                          args: #(
                            types: [integer!]
                          )
                        )
                      )
                      #(
                        range: [9 31 9 32]
                        expr: b
                        depth: 5
                        syntax: #(
                          name: func-param
                          args: #(
                            type: [9 33 9 42]
                          )
                        )
                      )
                      #(
                        range: [9 33 9 42]
                        expr:
                        [
                          #(
                            range: [9 34 9 41]
                            expr: binary!
                            depth: 6
                            syntax: #(
                              name: func-type-item
                            )
                          )
                        ]
                        depth: 5
                        syntax: #(
                          name: func-type
                          parent: [9 31 9 32]
                          args: #(
                            types: [binary!]
                          )
                        )
                      )
                    ]
                    depth: 4
                    syntax: #(
                      name: block
                      step: 1
                    )
                  )
                  #(
                    range: [9 43 17 5]
                    expr:
                    [
                      #(
                        range: [10 5 10 8]
                        expr: f1:
                        depth: 5
                        syntax: #(
                          name: set
                          step: 2
                          cast: [10 9 10 15]
                        )
                      )
                      #(
                        range: [10 9 10 15]
                        expr: "test"
                        depth: 5
                        syntax: #(
                          name: literal
                          step: 1
                        )
                      )
                      #(
                        range: [11 5 11 8]
                        expr: f2:
                        depth: 5
                        syntax: #(
                          name: set
                          step: 2
                          cast: [11 9 11 10]
                        )
                      )
                      #(
                        range: [11 9 11 10]
                        expr: x
                        depth: 5
                        syntax: #(
                          name: refer
                          step: 1
                          refer: [8 12 8 13]
                          word: x
                        )
                      )
                      #(
                        range: [12 5 12 8]
                        expr: f3:
                        depth: 5
                        syntax: #(
                          name: set
                          step: 2
                          cast: [12 9 12 11]
                        )
                      )
                      #(
                        range: [12 9 12 11]
                        expr: f1
                        depth: 5
                        syntax: #(
                          name: refer
                          step: 1
                          refer: [10 5 10 8]
                          value: [10 9 10 15]
                          word: f1
                        )
                      )
                      #(
                        range: [13 5 13 8]
                        expr: f4:
                        depth: 5
                        syntax: #(
                          name: set
                          step: 2
                          cast: [13 9 13 10]
                        )
                      )
                      #(
                        range: [13 9 13 10]
                        expr: l
                        depth: 5
                        syntax: #(
                          name: refer
                          step: 1
                          refer: [33 1 33 3]
                          value: [33 4 33 15]
                          word: l
                        )
                      )
                      #(
                        range: [14 5 14 8]
                        expr: f5:
                        depth: 5
                        syntax: #(
                          name: set
                          step: 2
                          cast: [14 9 14 11]
                        )
                      )
                      #(
                        range: [14 9 14 11]
                        expr: :f
                        depth: 5
                        syntax: #(
                          name: get
                          step: 1
                          refer: [8 3 8 5]
                          value: [8 6 8 10]
                        )
                      )
                      #(
                        range: [15 5 15 8]
                        expr: f6:
                        depth: 5
                        syntax: #(
                          name: set
                          step: 2
                          cast: [15 9 15 11]
                        )
                      )
                      #(
                        range: [15 9 15 11]
                        expr: f5
                        depth: 5
                        syntax: #(
                          name: refer
                          step: 1
                          refer: [8 3 8 5]
                          value: [8 6 8 10]
                          word: f5
                        )
                      )
                      #(
                        range: [16 5 16 8]
                        expr: f7:
                        depth: 5
                        syntax: #(
                          name: set
                          step: 2
                          cast: [16 9 16 10]
                        )
                      )
                      #(
                        range: [16 9 16 10]
                        expr: a
                        depth: 5
                        syntax: #(
                          name: refer
                          step: 1
                          refer: [9 18 9 19]
                          word: a
                        )
                      )
                      #(
                        range: [16 11 16 12]
                        expr: +
                        depth: 5
                        syntax: #(
                          name: unknown-keyword
                          step: 1
                          word: +
                        )
                      )
                      #(
                        range: [16 13 16 20]
                        expr: length?
                        depth: 5
                        syntax: #(
                          name: unknown-keyword
                          step: 1
                          word: length?
                        )
                      )
                      #(
                        range: [16 21 16 22]
                        expr: b
                        depth: 5
                        syntax: #(
                          name: refer
                          step: 1
                          refer: [9 31 9 32]
                          word: b
                        )
                      )
                    ]
                    depth: 4
                    syntax: #(
                      name: block
                      step: 1
                      into: true
                    )
                  )
                  #(
                    range: [18 4 18 6]
                    expr: x:
                    depth: 4
                    syntax: #(
                      name: set
                      step: 2
                      cast: [18 7 18 8]
                      refer: [8 12 8 13]
                    )
                  )
                  #(
                    range: [18 7 18 8]
                    expr: 1
                    depth: 4
                    syntax: #(
                      name: literal
                      step: 1
                    )
                  )
                  #(
                    range: [19 4 19 6]
                    expr: y:
                    depth: 4
                    syntax: #(
                      name: set
                      step: 2
                      cast: [19 7 19 8]
                      refer: [8 23 8 24]
                    )
                  )
                  #(
                    range: [19 7 19 8]
                    expr: 1
                    depth: 4
                    syntax: #(
                      name: literal
                      step: 1
                    )
                  )
                  #(
                    range: [20 4 20 6]
                    expr: e:
                    depth: 4
                    syntax: #(
                      name: set
                      step: 2
                      cast: [20 7 20 8]
                      refer: [7 3 7 5]
                      value: [7 6 7 11]
                    )
                  )
                  #(
                    range: [20 7 20 8]
                    expr: x
                    depth: 4
                    syntax: #(
                      name: refer
                      step: 1
                      refer: [8 12 8 13]
                      word: x
                    )
                  )
                  #(
                    range: [20 9 20 10]
                    expr: +
                    depth: 4
                    syntax: #(
                      name: unknown-keyword
                      step: 1
                      word: +
                    )
                  )
                  #(
                    range: [20 11 20 12]
                    expr: y
                    depth: 4
                    syntax: #(
                      name: refer
                      step: 1
                      refer: [8 23 8 24]
                      word: y
                    )
                  )
                  #(
                    range: [21 4 21 6]
                    expr: o:
                    depth: 4
                    syntax: #(
                      name: set
                      step: 2
                      cast: [21 7 21 8]
                      refer: [33 1 33 3]
                      value: [33 4 33 15]
                    )
                  )
                  #(
                    range: [21 7 21 8]
                    expr: g
                    depth: 4
                    syntax: #(
                      name: refer
                      step: 1
                      refer: [25 3 25 5]
                      value: [25 6 25 8]
                      word: g
                    )
                  )
                  #(
                    range: [22 4 22 6]
                    expr: t:
                    depth: 4
                    syntax: #(
                      name: set
                      step: 2
                      cast: [22 7 22 8]
                    )
                  )
                  #(
                    range: [22 7 22 8]
                    expr: h
                    depth: 4
                    syntax: #(
                      name: refer
                      step: 1
                      refer: [27 2 27 4]
                      value: [27 5 27 12]
                      word: h
                    )
                  )
                  #(
                    range: [23 4 23 6]
                    expr: u:
                    depth: 4
                    syntax: #(
                      name: set
                      step: 2
                      cast: [23 7 23 8]
                    )
                  )
                  #(
                    range: [23 7 23 8]
                    expr: x
                    depth: 4
                    syntax: #(
                      name: refer
                      step: 1
                      refer: [8 12 8 13]
                      word: x
                    )
                  )
                ]
                depth: 3
                syntax: #(
                  name: block
                  step: 1
                  into: true
                )
              )
              #(
                range: [25 3 25 5]
                expr: g:
                depth: 3
                syntax: #(
                  name: set
                  step: 2
                  cast: [25 6 25 8]
                )
              )
              #(
                range: [25 6 25 8]
                expr: []
                depth: 3
                syntax: #(
                  name: block
                  step: 1
                )
              )
            ]
            depth: 2
            syntax: #(
              name: block
              step: 1
              into: true
            )
          )
          #(
            range: [27 2 27 4]
            expr: h:
            depth: 2
            syntax: #(
              name: set
              step: 2
              cast: [27 5 27 12]
            )
          )
          #(
            range: [27 5 27 12]
            expr: #(a: 3)
            depth: 2
            syntax: #(
              name: literal
              step: 1
            )
          )
          #(
            range: [28 2 28 4]
            expr: i:
            depth: 2
            syntax: #(
              name: set
              step: 2
              cast: [28 5 28 6]
            )
          )
          #(
            range: [28 5 28 6]
            expr: x
            depth: 2
            syntax: #(
              name: unknown
              step: 1
              word: x
            )
          )
          #(
            range: [29 2 29 4]
            expr: j:
            depth: 2
            syntax: #(
              name: set
              step: 2
              cast: [29 5 29 6]
            )
          )
          #(
            range: [29 5 29 6]
            expr: e
            depth: 2
            syntax: #(
              name: keyword-value
              step: 1
              word: e
            )
          )
          #(
            range: [30 2 30 4]
            expr: k:
            depth: 2
            syntax: #(
              name: set
              step: 2
              cast: [30 5 30 6]
            )
          )
          #(
            range: [30 5 30 6]
            expr: t
            depth: 2
            syntax: #(
              name: unknown
              step: 1
              word: t
            )
          )
        ]
        depth: 1
        syntax: #(
          name: block
          step: 1
          into: true
        )
      )
      #(
        range: [33 1 33 3]
        expr: l:
        depth: 1
        syntax: #(
          name: set
          step: 2
          cast: [33 4 33 15]
        )
      )
      #(
        range: [33 4 33 15]
        expr:
        (
          #(
            range: [33 5 33 7]
            expr: m:
            depth: 2
            syntax: #(
              name: set
              step: 2
              cast: [33 8 33 9]
            )
          )
          #(
            range: [33 8 33 9]
            expr: 3
            depth: 2
            syntax: #(
              name: literal
              step: 1
            )
          )
          #(
            range: [33 10 33 12]
            expr: n:
            depth: 2
            syntax: #(
              name: set
              step: 2
              cast: [33 13 33 14]
            )
          )
          #(
            range: [33 13 33 14]
            expr: a
            depth: 2
            syntax: #(
              name: refer
              step: 1
              refer: [3 1 3 3]
              value: [3 4 3 9]
              word: a
            )
          )
        )
        depth: 1
        syntax: #(
          name: paren
          step: 1
        )
      )
      #(
        range: [34 1 34 3]
        expr: o:
        depth: 1
        syntax: #(
          name: set
          step: 2
          cast: [34 4 34 5]
        )
      )
      #(
        range: [34 4 34 5]
        expr: l
        depth: 1
        syntax: #(
          name: refer
          step: 1
          refer: [33 1 33 3]
          value: [33 4 33 15]
          word: l
        )
      )
      #(
        range: [36 1 36 3]
        expr: r:
        depth: 1
        syntax: #(
          name: set
          step: 2
          cast: [36 4 36 8]
        )
      )
      #(
        range: [36 4 36 8]
        expr: func
        depth: 1
        syntax: #(
          name: keyword-func
          step: 3
          word: func
          casts: #(
            spec: [36 9 36 40]
            body: [36 40 39 2]
          )
          resolved: #(
            spec: [36 9 36 40]
            body: [36 40 39 2]
          )
        )
      )
      #(
        range: [36 9 36 40]
        expr:
        [
          #(
            range: [36 10 36 11]
            expr: a
            depth: 2
            syntax: #(
              name: func-param
              args: #(
                type: [36 12 36 18]
              )
            )
          )
          #(
            range: [36 12 36 18]
            expr:
            [
              #(
                range: [36 13 36 17]
                expr: test
                depth: 3
                syntax: #(
                  name: func-type-item
                  error: #(severity: 1 code: "invalid-datatype" source: "Syntax" message: "test -- invalid datatype: test")
                )
              )
            ]
            depth: 2
            syntax: #(
              name: func-type
              parent: [36 10 36 11]
              args: #(
                types: []
              )
            )
          )
          #(
            range: [36 19 36 20]
            expr: b
            depth: 2
            syntax: #(
              name: func-param
              args: #(
                type: [36 21 36 28]
              )
            )
          )
          #(
            range: [36 21 36 28]
            expr:
            [
              #(
                range: [36 22 36 27]
                expr: test!
                depth: 3
                syntax: #(
                  name: func-type-item
                  error: #(severity: 1 code: "invalid-datatype" source: "Syntax" message: "test! -- invalid datatype: test!")
                )
              )
            ]
            depth: 2
            syntax: #(
              name: func-type
              parent: [36 19 36 20]
              args: #(
                types: []
              )
            )
          )
          #(
            range: [36 29 36 35]
            expr: /local
            depth: 2
            syntax: #(
              name: func-refinement
              args: #(
                types: [
                  [36 36 36 37]
                  [36 38 36 39]
                  [36 38 36 39]
                ]
              )
            )
          )
          #(
            range: [36 36 36 37]
            expr: x
            depth: 2
            syntax: #(
              name: func-param
              args: #(
                refs: [36 29 36 35]
              )
            )
          )
          #(
            range: [36 38 36 39]
            expr: y
            depth: 2
            syntax: #(
              name: func-param
              args: #(
                refs: [36 29 36 35]
              )
            )
          )
        ]
        depth: 1
        syntax: #(
          name: block
          step: 1
        )
      )
      #(
        range: [36 40 39 2]
        expr:
        [
          #(
            range: [37 2 37 4]
            expr: x:
            depth: 2
            syntax: #(
              name: set
              step: 2
              cast: [37 5 37 6]
              refer: [36 36 36 37]
            )
          )
          #(
            range: [37 5 37 6]
            expr: 1
            depth: 2
            syntax: #(
              name: literal
              step: 1
            )
          )
          #(
            range: [37 7 37 9]
            expr: y:
            depth: 2
            syntax: #(
              name: set
              step: 2
              cast: [37 10 37 11]
              refer: [36 38 36 39]
            )
          )
          #(
            range: [37 10 37 11]
            expr: 1
            depth: 2
            syntax: #(
              name: literal
              step: 1
            )
          )
          #(
            range: [38 2 38 3]
            expr: a
            depth: 2
            syntax: #(
              name: refer
              step: 1
              refer: [36 10 36 11]
              word: a
            )
          )
          #(
            range: [38 4 38 5]
            expr: +
            depth: 2
            syntax: #(
              name: unknown-keyword
              step: 1
              word: +
            )
          )
          #(
            range: [38 6 38 7]
            expr: b
            depth: 2
            syntax: #(
              name: refer
              step: 1
              refer: [36 19 36 20]
              word: b
            )
          )
          #(
            range: [38 8 38 9]
            expr: +
            depth: 2
            syntax: #(
              name: unknown-keyword
              step: 1
              word: +
            )
          )
          #(
            range: [38 10 38 11]
            expr: 1
            depth: 2
            syntax: #(
              name: literal
              step: 1
            )
          )
          #(
            range: [38 12 38 13]
            expr: +
            depth: 2
            syntax: #(
              name: unknown-keyword
              step: 1
              word: +
            )
          )
          #(
            range: [38 14 38 15]
            expr: 1
            depth: 2
            syntax: #(
              name: literal
              step: 1
            )
          )
        ]
        depth: 1
        syntax: #(
          name: block
          step: 1
          into: true
        )
      )
      #(
        range: [41 1 41 3]
        expr: s:
        depth: 1
        syntax: #(
          name: set
          step: 2
          cast: [41 4 41 12]
        )
      )
      #(
        range: [41 4 41 12]
        expr: function
        depth: 1
        syntax: #(
          name: keyword-function
          step: 3
          word: function
          casts: #(
            spec: [41 13 41 56]
            body: [41 56 47 2]
          )
          resolved: #(
            spec: [41 13 41 56]
            body: [41 56 47 2]
          )
        )
      )
      #(
        range: [41 13 41 56]
        expr:
        [
          #(
            range: [41 14 41 17]
            expr: uri
            depth: 2
            syntax: #(
              name: func-param
              args: #(
                type: [41 18 41 27]
              )
            )
          )
          #(
            range: [41 18 41 27]
            expr:
            [
              #(
                range: [41 19 41 26]
                expr: string!
                depth: 3
                syntax: #(
                  name: func-type-item
                )
              )
            ]
            depth: 2
            syntax: #(
              name: func-type
              parent: [41 14 41 17]
              args: #(
                types: [string!]
              )
            )
          )
          #(
            range: [41 28 41 32]
            expr: code
            depth: 2
            syntax: #(
              name: func-param
              args: #(
                type: [41 33 41 42]
              )
            )
          )
          #(
            range: [41 33 41 42]
            expr:
            [
              #(
                range: [41 34 41 41]
                expr: string!
                depth: 3
                syntax: #(
                  name: func-type-item
                )
              )
            ]
            depth: 2
            syntax: #(
              name: func-type
              parent: [41 28 41 32]
              args: #(
                types: [string!]
              )
            )
          )
          #(
            range: [41 43 41 46]
            expr: blk
            depth: 2
            syntax: #(
              name: func-param
              args: #(
                type: [41 47 41 55]
              )
            )
          )
          #(
            range: [41 47 41 55]
            expr:
            [
              #(
                range: [41 48 41 54]
                expr: block!
                depth: 3
                syntax: #(
                  name: func-type-item
                )
              )
            ]
            depth: 2
            syntax: #(
              name: func-type
              parent: [41 43 41 46]
              args: #(
                types: [block!]
              )
            )
          )
        ]
        depth: 1
        syntax: #(
          name: block
          step: 1
        )
      )
      #(
        range: [41 56 47 2]
        expr:
        [
          #(
            range: [42 2 42 8]
            expr: either
            depth: 2
            syntax: #(
              name: unknown-keyword
              step: 1
              word: either
            )
          )
          #(
            range: [42 9 42 12]
            expr: uri
            depth: 2
            syntax: #(
              name: refer
              step: 1
              refer: [41 14 41 17]
              word: uri
            )
          )
          #(
            range: [42 13 44 3]
            expr:
            [
              #(
                range: [43 3 43 9]
                expr: return
                depth: 3
                syntax: #(
                  name: none
                )
              )
              #(
                range: [43 10 43 16]
                expr: reduce
                depth: 3
                syntax: #(
                  name: none
                )
              )
              #(
                range: [43 17 43 31]
                expr:
                [
                  #(
                    range: [43 18 43 21]
                    expr: uri
                    depth: 4
                    syntax: #(
                      name: none
                    )
                  )
                  #(
                    range: [43 22 43 26]
                    expr: code
                    depth: 4
                    syntax: #(
                      name: none
                    )
                  )
                  #(
                    range: [43 27 43 30]
                    expr: blk
                    depth: 4
                    syntax: #(
                      name: none
                    )
                  )
                ]
                depth: 3
                syntax: #(
                  name: none
                )
              )
            ]
            depth: 2
            syntax: #(
              name: block
              step: 1
            )
          )
          #(
            range: [44 3 46 3]
            expr:
            [
              #(
                range: [45 3 45 9]
                expr: return
                depth: 3
                syntax: #(
                  name: none
                )
              )
              #(
                range: [45 10 45 16]
                expr: reduce
                depth: 3
                syntax: #(
                  name: none
                )
              )
              #(
                range: [45 17 45 31]
                expr:
                [
                  #(
                    range: [45 18 45 21]
                    expr: uri
                    depth: 4
                    syntax: #(
                      name: none
                    )
                  )
                  #(
                    range: [45 22 45 26]
                    expr: code
                    depth: 4
                    syntax: #(
                      name: none
                    )
                  )
                  #(
                    range: [45 27 45 30]
                    expr: blk
                    depth: 4
                    syntax: #(
                      name: none
                    )
                  )
                ]
                depth: 3
                syntax: #(
                  name: none
                )
              )
            ]
            depth: 2
            syntax: #(
              name: block
              step: 1
            )
          )
        ]
        depth: 1
        syntax: #(
          name: block
          step: 1
          into: true
        )
      )
      #(
        range: [49 1 49 5]
        expr: fff:
        depth: 1
        syntax: #(
          name: set
          step: 2
          cast: [49 6 49 7]
        )
      )
      #(
        range: [49 6 49 7]
        expr: 3
        depth: 1
        syntax: #(
          name: literal
          step: 1
        )
      )
      #(
        range: [51 1 51 4]
        expr: ft:
        depth: 1
        syntax: #(
          name: set
          step: 2
          cast: [51 5 51 9]
        )
      )
      #(
        range: [51 5 51 9]
        expr: func
        depth: 1
        syntax: #(
          name: keyword-func
          step: 3
          word: func
          casts: #(
            spec: [51 10 51 104]
            body: [51 104 54 2]
          )
          resolved: #(
            spec: [51 10 51 104]
            body: [51 104 54 2]
          )
        )
      )
      #(
        range: [51 10 51 104]
        expr:
        [
          #(
            range: [51 11 51 12]
            expr: a
            depth: 2
            syntax: #(
              name: func-param
              args: #(
                type: [51 13 51 21]
              )
            )
          )
          #(
            range: [51 13 51 21]
            expr:
            [
              #(
                range: [51 14 51 20]
                expr: block!
                depth: 3
                syntax: #(
                  name: func-type-item
                )
              )
            ]
            depth: 2
            syntax: #(
              name: func-type
              parent: [51 11 51 12]
              args: #(
                types: [block!]
              )
            )
          )
          #(
            range: [51 22 51 23]
            expr: b
            depth: 2
            syntax: #(
              name: func-param
              args: #(
                type: [51 24 51 39]
              )
            )
          )
          #(
            range: [51 24 51 39]
            expr:
            [
              #(
                range: [51 25 51 29]
                expr: map!
                depth: 3
                syntax: #(
                  name: func-type-item
                )
              )
              #(
                range: [51 30 51 38]
                expr: integer!
                depth: 3
                syntax: #(
                  name: func-type-item
                )
              )
            ]
            depth: 2
            syntax: #(
              name: func-type
              parent: [51 22 51 23]
              args: #(
                types: [map! integer!]
              )
            )
          )
          #(
            range: [51 40 51 47]
            expr: return:
            depth: 2
            syntax: #(
              name: func-return
              error: #(severity: 1 code: "invalid-arg" source: "Syntax" message: "return: -- invalid argument for: c")
              args: #(
                type: [51 48 51 58]
              )
            )
          )
          #(
            range: [51 48 51 58]
            expr:
            [
              #(
                range: [51 49 51 57]
                expr: integer!
                depth: 3
                syntax: #(
                  name: func-type-item
                )
              )
            ]
            depth: 2
            syntax: #(
              name: func-type
              parent: [51 40 51 47]
              args: #(
                types: [integer!]
              )
            )
          )
          #(
            range: [51 59 51 60]
            expr: c
            depth: 2
            syntax: #(
              name: func-param
              args: #(
                type: [51 61 51 71]
              )
            )
          )
          #(
            range: [51 61 51 71]
            expr:
            [
              #(
                range: [51 62 51 70]
                expr: integer!
                depth: 3
                syntax: #(
                  name: func-type-item
                )
              )
            ]
            depth: 2
            syntax: #(
              name: func-type
              parent: [51 59 51 60]
              args: #(
                types: [integer!]
              )
            )
          )
          #(
            range: [51 72 51 74]
            expr: /c
            depth: 2
            syntax: #(
              name: func-refinement
              error: #(severity: 1 code: "double-define" source: "Syntax" message: "/c -- double define: c")
              args: #(
                types: [
                  [51 75 51 76]
                  [51 77 51 87]
                  [51 88 51 90]
                  [51 91 51 97]
                  [51 98 51 99]
                  [51 100 51 101]
                  [51 102 51 103]
                ]
              )
            )
          )
          #(
            range: [51 75 51 76]
            expr: a
            depth: 2
            syntax: #(
              name: func-param
              error: #(severity: 1 code: "double-define" source: "Syntax" message: "a -- double define: a")
              args: #(
                refs: [51 72 51 74]
                type: [51 77 51 87]
              )
            )
          )
          #(
            range: [51 77 51 87]
            expr:
            [
              #(
                range: [51 78 51 86]
                expr: integer!
                depth: 3
                syntax: #(
                  name: func-type-item
                )
              )
            ]
            depth: 2
            syntax: #(
              name: func-type
              parent: [51 75 51 76]
              args: #(
                types: [integer!]
              )
            )
          )
          #(
            range: [51 88 51 90]
            expr: /d
            depth: 2
            syntax: #(
              name: func-refinement
              args: #(
                types: [
                ]
              )
            )
          )
          #(
            range: [51 91 51 97]
            expr: /local
            depth: 2
            syntax: #(
              name: func-refinement
              args: #(
                types: [
                  [51 98 51 99]
                  [51 100 51 101]
                  [51 102 51 103]
                  [51 100 51 101]
                  [51 102 51 103]
                  [51 102 51 103]
                ]
              )
            )
          )
          #(
            range: [51 98 51 99]
            expr: x
            depth: 2
            syntax: #(
              name: func-param
              args: #(
                refs: [51 91 51 97]
              )
            )
          )
          #(
            range: [51 100 51 101]
            expr: y
            depth: 2
            syntax: #(
              name: func-param
              args: #(
                refs: [51 91 51 97]
              )
            )
          )
          #(
            range: [51 102 51 103]
            expr: z
            depth: 2
            syntax: #(
              name: func-param
              args: #(
                refs: [51 91 51 97]
              )
            )
          )
        ]
        depth: 1
        syntax: #(
          name: block
          step: 1
        )
      )
      #(
        range: [51 104 54 2]
        expr:
        [
          #(
            range: [52 2 52 8]
            expr: reduce
            depth: 2
            syntax: #(
              name: unknown-keyword
              step: 1
              word: reduce
            )
          )
          #(
            range: [52 9 52 18]
            expr:
            [
              #(
                range: [52 10 52 11]
                expr: a
                depth: 3
                syntax: #(
                  name: none
                )
              )
              #(
                range: [52 12 52 13]
                expr: b
                depth: 3
                syntax: #(
                  name: none
                )
              )
              #(
                range: [52 14 52 15]
                expr: c
                depth: 3
                syntax: #(
                  name: none
                )
              )
              #(
                range: [52 16 52 17]
                expr: d
                depth: 3
                syntax: #(
                  name: none
                )
              )
            ]
            depth: 2
            syntax: #(
              name: block
              step: 1
            )
          )
          #(
            range: [53 2 53 12]
            expr: find/match
            depth: 2
            syntax: #(
              name: unknown-keyword
              step: 1
              word: find
            )
          )
          #(
            range: [53 13 53 18]
            expr: "adb"
            depth: 2
            syntax: #(
              name: literal
              step: 1
            )
          )
          #(
            range: [53 19 53 22]
            expr: "a"
            depth: 2
            syntax: #(
              name: literal
              step: 1
            )
          )
        ]
        depth: 1
        syntax: #(
          name: block
          step: 1
          into: true
        )
      )
      #(
        range: [56 1 56 5]
        expr: fh1:
        depth: 1
        syntax: #(
          name: set
          step: 2
          cast: [56 6 56 9]
        )
      )
      #(
        range: [56 6 56 9]
        expr: has
        depth: 1
        syntax: #(
          name: keyword-has
          step: 4
          error: #(severity: 1 code: "miss-expr" source: "Syntax" message: "has -- need a type: block!")
          word: has
          casts: #(
            spec: [56 10 56 20]
            body: [57 1 57 5]
          )
          resolved: #(
            spec: [56 10 56 20]
          )
        )
      )
      #(
        range: [56 10 56 20]
        expr:
        [
          #(
            range: [56 11 56 15]
            expr: /ref
            depth: 2
            syntax: #(
              name: func-refinement
              error: #(severity: 1 code: "forbidden-refine" source: "Syntax" message: "/ref -- forbidden refinement: /ref")
              args: #(
                types: [
                  [56 16 56 17]
                  [56 18 56 19]
                  [56 18 56 19]
                ]
              )
            )
          )
          #(
            range: [56 16 56 17]
            expr: a
            depth: 2
            syntax: #(
              name: func-param
              args: #(
                refs: [56 11 56 15]
              )
            )
          )
          #(
            range: [56 18 56 19]
            expr: b
            depth: 2
            syntax: #(
              name: func-param
              args: #(
                refs: [56 11 56 15]
              )
            )
          )
        ]
        depth: 1
        syntax: #(
          name: block
          step: 1
        )
      )
      #(
        range: [57 1 57 5]
        expr: fh2:
        depth: 1
        syntax: #(
          name: set
          step: 2
          cast: [57 6 57 9]
        )
      )
      #(
        range: [57 6 57 9]
        expr: has
        depth: 1
        syntax: #(
          name: unknown-keyword
          step: 1
          word: has
        )
      )
      #(
        range: [57 10 57 15]
        expr:
        [
          #(
            range: [57 11 57 12]
            expr: a
            depth: 2
            syntax: #(
              name: none
            )
          )
          #(
            range: [57 13 57 14]
            expr: b
            depth: 2
            syntax: #(
              name: none
            )
          )
        ]
        depth: 1
        syntax: #(
          name: block
          step: 1
        )
      )
      #(
        range: [57 15 57 17]
        expr: []
        depth: 1
        syntax: #(
          name: block
          step: 1
        )
      )
      #(
        range: [59 1 59 3]
        expr: z:
        depth: 1
        syntax: #(
          name: set
          step: 2
          error: #(severity: 1 code: "recursive-define" source: "Syntax" message: "z: -- recursive define")
          cast: [59 4 59 5]
        )
      )
      #(
        range: [59 4 59 5]
        expr: z
        depth: 1
        syntax: #(
          name: unknown
          step: 1
          word: z
        )
      )
      #(
        range: [61 1 61 5]
        expr: blk:
        depth: 1
        syntax: #(
          name: set
          step: 2
          cast: [61 6 61 12]
        )
      )
      #(
        range: [61 6 61 12]
        expr:
        [
          #(
            range: [61 7 61 9]
            expr: a:
            depth: 2
            syntax: #(
              name: none
            )
          )
          #(
            range: [61 10 61 11]
            expr: 1
            depth: 2
            syntax: #(
              name: none
            )
          )
        ]
        depth: 1
        syntax: #(
          name: block
          step: 1
        )
      )
      #(
        range: [62 1 62 5]
        expr: ctx:
        depth: 1
        syntax: #(
          name: set
          step: 2
          cast: [62 6 62 13]
        )
      )
      #(
        range: [62 6 62 13]
        expr: context
        depth: 1
        syntax: #(
          name: keyword-context
          step: 2
          word: context
          casts: #(
            spec: [62 14 64 2]
          )
          resolved: #(
            spec: [62 14 64 2]
          )
        )
      )
      #(
        range: [62 14 64 2]
        expr:
        [
          #(
            range: [63 2 63 4]
            expr: a:
            depth: 2
            syntax: #(
              name: set
              step: 2
              cast: [63 5 63 9]
              refer: [3 1 3 3]
              value: [3 4 3 9]
            )
          )
          #(
            range: [63 5 63 9]
            expr: none
            depth: 2
            syntax: #(
              name: keyword-value
              step: 1
              word: none
            )
          )
        ]
        depth: 1
        syntax: #(
          name: block
          step: 1
          into: true
        )
      )
      #(
        range: [66 1 66 3]
        expr: do
        depth: 1
        syntax: #(
          name: unknown-keyword
          step: 1
          word: do
        )
      )
      #(
        range: [66 4 66 8]
        expr: bind
        depth: 1
        syntax: #(
          name: unknown-keyword
          step: 1
          word: bind
        )
      )
      #(
        range: [66 9 66 12]
        expr: blk
        depth: 1
        syntax: #(
          name: refer
          step: 1
          refer: [61 1 61 5]
          value: [61 6 61 12]
          word: blk
        )
      )
      #(
        range: [66 13 66 16]
        expr: ctx
        depth: 1
        syntax: #(
          name: refer
          step: 1
          refer: [62 1 62 5]
          value: [62 6 62 13]
          word: ctx
        )
      )
    ]
    depth: 0
    max-depth: 6
    syntax: #(
      name: top
      step: 1
      extra: [
        [33 5 33 7]
        [33 10 33 12]
        [9 4 9 7]
        [22 4 22 6]
        [23 4 23 6]
      ]
    )
  )
]
Error/Warning: ---------------------------------------
[#(
    severity: 1
    code: "miss-expr"
    source: "Syntax"
    message: "he: -- need a type: block! for Red File header"
    range: #(
        start: #(
            line: 0
            character: 4
        )
        end: #(
            line: 0
            character: 7
        )
    )
) #(
    severity: 1
    code: "invalid-datatype"
    source: "Syntax"
    message: "test -- invalid datatype: test"
    range: #(
        start: #(
            line: 35
            character: 12
        )
        end: #(
            line: 35
            character: 16
        )
    )
) #(
    severity: 1
    code: "invalid-datatype"
    source: "Syntax"
    message: "test! -- invalid datatype: test!"
    range: #(
        start: #(
            line: 35
            character: 21
        )
        end: #(
            line: 35
            character: 26
        )
    )
) #(
    severity: 1
    code: "invalid-arg"
    source: "Syntax"
    message: "return: -- invalid argument for: c"
    range: #(
        start: #(
            line: 50
            character: 39
        )
        end: #(
            line: 50
            character: 46
        )
    )
) #(
    severity: 1
    code: "double-define"
    source: "Syntax"
    message: "/c -- double define: c"
    range: #(
        start: #(
            line: 50
            character: 71
        )
        end: #(
            line: 50
            character: 73
        )
    )
) #(
    severity: 1
    code: "double-define"
    source: "Syntax"
    message: "a -- double define: a"
    range: #(
        start: #(
            line: 50
            character: 74
        )
        end: #(
            line: 50
            character: 75
        )
    )
) #(
    severity: 1
    code: "miss-expr"
    source: "Syntax"
    message: "has -- need a type: block!"
    range: #(
        start: #(
            line: 55
            character: 5
        )
        end: #(
            line: 55
            character: 8
        )
    )
) #(
    severity: 1
    code: "forbidden-refine"
    source: "Syntax"
    message: "/ref -- forbidden refinement: /ref"
    range: #(
        start: #(
            line: 55
            character: 10
        )
        end: #(
            line: 55
            character: 14
        )
    )
) #(
    severity: 1
    code: "recursive-define"
    source: "Syntax"
    message: "z: -- recursive define"
    range: #(
        start: #(
            line: 58
            character: 0
        )
        end: #(
            line: 58
            character: 2
        )
    )
)]

[
  #(
    range: [10 5 10 8]
    expr: f1:
    depth: 5
    syntax: #(
      name: set
      step: 2
      cast: [10 9 10 15]
    )
  )
  #(
    range: [11 5 11 8]
    expr: f2:
    depth: 5
    syntax: #(
      name: set
      step: 2
      cast: [11 9 11 10]
    )
  )
  #(
    range: [12 5 12 8]
    expr: f3:
    depth: 5
    syntax: #(
      name: set
      step: 2
      cast: [12 9 12 11]
    )
  )
  #(
    range: [13 5 13 8]
    expr: f4:
    depth: 5
    syntax: #(
      name: set
      step: 2
      cast: [13 9 13 10]
    )
  )
  #(
    range: [14 5 14 8]
    expr: f5:
    depth: 5
    syntax: #(
      name: set
      step: 2
      cast: [14 9 14 11]
    )
  )
  #(
    range: [15 5 15 8]
    expr: f6:
    depth: 5
    syntax: #(
      name: set
      step: 2
      cast: [15 9 15 11]
    )
  )
  #(
    range: [16 5 16 8]
    expr: f7:
    depth: 5
    syntax: #(
      name: set
      step: 2
      cast: [16 9 16 10]
    )
  )
  #(
    range: [9 4 9 7]
    expr: ff:
    depth: 4
    syntax: #(
      name: set
      step: 2
      cast: [9 8 9 16]
    )
  )
  #(
    range: [8 3 8 5]
    expr: f:
    depth: 3
    syntax: #(
      name: set
      step: 2
      cast: [8 6 8 10]
    )
  )
  #(
    range: [49 1 49 5]
    expr: fff:
    depth: 1
    syntax: #(
      name: set
      step: 2
      cast: [49 6 49 7]
    )
  )
  #(
    range: [51 1 51 4]
    expr: ft:
    depth: 1
    syntax: #(
      name: set
      step: 2
      cast: [51 5 51 9]
    )
  )
  #(
    range: [56 1 56 5]
    expr: fh1:
    depth: 1
    syntax: #(
      name: set
      step: 2
      cast: [56 6 56 9]
    )
  )
  #(
    range: [57 1 57 5]
    expr: fh2:
    depth: 1
    syntax: #(
      name: set
      step: 2
      cast: [57 6 57 9]
    )
  )
]
PS D:\vscode-ext\VScode-extension\server>